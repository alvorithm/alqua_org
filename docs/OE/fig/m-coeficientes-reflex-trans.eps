%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 106 3 338 146
%%HiResBoundingBox: 106.75 3.1875 337.125 145.5
%%Creator: (Mathematica 4.0 for X)
%%CreationDate: (Monday, March 27, 2000) (10:45:19)
%%Title: Clipboard
%%DocumentNeededResources: font Math1Mono
%%+ font Courier
%%DocumentSuppliedResources:
%%DocumentNeededFonts: Math1Mono
%%+ Courier
%%DocumentSuppliedFonts:
%%DocumentFonts: Math1Mono
%%+ Courier
%%EndComments
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 148.688 translate 1 -1 scale
gsave
150 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
 	     Momatrix
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        9 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        11 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
	      /Momatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/yscale exch def
	/ybias exch def
	/xscale exch def
	/xbias exch def
	/Momatrix
	xscale yscale matrix scale
	xbias ybias matrix translate
	matrix concatmatrix def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabsproc {
        0
        matrix defaultmatrix
        dtransform idtransform
        dup mul exch
        dup mul
        add sqrt
} bind def
/Mabswid {
        Mabsproc
        setlinewidth
} bind def
/Mabsdash {
        exch
        [
        exch
        {
        Mabsproc
        }
        forall
        ]
        exch
        setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse
% Here are the short operators
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def

/MFill {
	0 0 		moveto
	Mwidth 0 	lineto
	Mwidth Mheight 	lineto
	0 Mheight 	lineto
	fill
} bind def

/MPlotRegion {
	3 index
	Mwidth mul
	2 index
	Mheight mul
	translate
	exch sub
	Mheight mul
	/Mheight
	exch def
	exch sub
	Mwidth mul
	/Mwidth
	exch def
} bind def

/Mcharproc
{
  	currentfile
  	(x)
  	readhexstring
  	pop
  	0 get
  	exch
 	div
} bind def

/Mshadeproc
{
	dup
	3 1
	roll
	{
	dup
	Mcharproc
	3 1
	roll
	} repeat
	1 eq
	{
	setgray
	}
	{
	3 eq
	{
	setrgbcolor
	}
	{
	setcmykcolor
	} ifelse
	} ifelse
} bind def

/Mrectproc
{
	3 index
	2 index
	moveto
	2 index
	3 -1
	roll
	lineto
	dup
	3 1
	roll
	lineto
	lineto
	fill
} bind def

/_Mcolorimage
{
	7 1
	roll
	pop
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	9 index
	Mshadeproc
	Mrectproc
	} for
	pop
	} for
	pop pop pop pop
} bind def

/_Mimage
{
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub 
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	Mcharproc
	setgray
	Mrectproc
	} for
	pop
	} for
	pop pop pop
} bind def

/Mimage {
	4 index
	4 index
	mul 1600 gt
	{ image }
	{ _Mimage }
	ifelse
} def

/Mcolorimage {
	6 index
	6 index
	mul 1600 gt
	{ colorimage }
	{ _Mcolorimage }
	ifelse
} def
/Mnodistort true def
1.000000 1.000000 scale
106.750000 145.500000 translate
1.000000 -1.000000 scale
-0.000000 -0.000000 translate
/Mleft		0.000000 def
/Mbottom	0.000000 def
/Mwidth		230.375000 def
/Mheight	142.312500 def
0 setgray
0 setlinewidth
/Courier findfont 12 scalefont setfont
/Mfontsize 12 def
/Plain /Courier findfont def

%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0238095 0.606305 0.341717 0.327002 [
[.17539 .32922 -12 -9 ]
[.17539 .32922 12 0 ]
[.32696 .32922 -9 -9 ]
[.32696 .32922 9 0 ]
[.47854 .32922 -12 -9 ]
[.47854 .32922 12 0 ]
[.63011 .32922 -3 -9 ]
[.63011 .32922 3 0 ]
[.78169 .32922 -12 -9 ]
[.78169 .32922 12 0 ]
[.93327 .32922 -9 -9 ]
[.93327 .32922 9 0 ]
[1.025 .34172 0 -4.90625 ]
[1.025 .34172 10 4.90625 ]
[.01131 .01472 -12 -4.5 ]
[.01131 .01472 0 4.5 ]
[.01131 .09647 -30 -4.5 ]
[.01131 .09647 0 4.5 ]
[.01131 .17822 -24 -4.5 ]
[.01131 .17822 0 4.5 ]
[.01131 .25997 -30 -4.5 ]
[.01131 .25997 0 4.5 ]
[.01131 .42347 -24 -4.5 ]
[.01131 .42347 0 4.5 ]
[.01131 .50522 -18 -4.5 ]
[.01131 .50522 0 4.5 ]
[.01131 .58697 -24 -4.5 ]
[.01131 .58697 0 4.5 ]
[.02381 .64303 -14 0 ]
[.02381 .64303 14 9.8125 ]
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.17539 .34172 m
.17539 .34797 L
s
[(0.25)] .17539 .32922 0 1 Mshowa
.32696 .34172 m
.32696 .34797 L
s
[(0.5)] .32696 .32922 0 1 Mshowa
.47854 .34172 m
.47854 .34797 L
s
[(0.75)] .47854 .32922 0 1 Mshowa
.63011 .34172 m
.63011 .34797 L
s
[(1)] .63011 .32922 0 1 Mshowa
.78169 .34172 m
.78169 .34797 L
s
[(1.25)] .78169 .32922 0 1 Mshowa
.93327 .34172 m
.93327 .34797 L
s
[(1.5)] .93327 .32922 0 1 Mshowa
.125 Mabswid
.05412 .34172 m
.05412 .34547 L
s
.08444 .34172 m
.08444 .34547 L
s
.11476 .34172 m
.11476 .34547 L
s
.14507 .34172 m
.14507 .34547 L
s
.2057 .34172 m
.2057 .34547 L
s
.23602 .34172 m
.23602 .34547 L
s
.26633 .34172 m
.26633 .34547 L
s
.29665 .34172 m
.29665 .34547 L
s
.35728 .34172 m
.35728 .34547 L
s
.38759 .34172 m
.38759 .34547 L
s
.41791 .34172 m
.41791 .34547 L
s
.44822 .34172 m
.44822 .34547 L
s
.50885 .34172 m
.50885 .34547 L
s
.53917 .34172 m
.53917 .34547 L
s
.56948 .34172 m
.56948 .34547 L
s
.5998 .34172 m
.5998 .34547 L
s
.66043 .34172 m
.66043 .34547 L
s
.69074 .34172 m
.69074 .34547 L
s
.72106 .34172 m
.72106 .34547 L
s
.75138 .34172 m
.75138 .34547 L
s
.81201 .34172 m
.81201 .34547 L
s
.84232 .34172 m
.84232 .34547 L
s
.87264 .34172 m
.87264 .34547 L
s
.90295 .34172 m
.90295 .34547 L
s
.96358 .34172 m
.96358 .34547 L
s
.9939 .34172 m
.9939 .34547 L
s
.25 Mabswid
0 .34172 m
1 .34172 L
s
gsave
1.025 .34172 -61 -8.90625 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 17.8125 translate 1 -1 scale
63.000 11.250 moveto
%%IncludeResource: font Math1Mono
%%IncludeFont: Math1Mono
/Math1Mono findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(q) show
1.000 setlinewidth
grestore
.02381 .01472 m
.03006 .01472 L
s
[(-1)] .01131 .01472 1 0 Mshowa
.02381 .09647 m
.03006 .09647 L
s
[(-0.75)] .01131 .09647 1 0 Mshowa
.02381 .17822 m
.03006 .17822 L
s
[(-0.5)] .01131 .17822 1 0 Mshowa
.02381 .25997 m
.03006 .25997 L
s
[(-0.25)] .01131 .25997 1 0 Mshowa
.02381 .42347 m
.03006 .42347 L
s
[(0.25)] .01131 .42347 1 0 Mshowa
.02381 .50522 m
.03006 .50522 L
s
[(0.5)] .01131 .50522 1 0 Mshowa
.02381 .58697 m
.03006 .58697 L
s
[(0.75)] .01131 .58697 1 0 Mshowa
.125 Mabswid
.02381 .03107 m
.02756 .03107 L
s
.02381 .04742 m
.02756 .04742 L
s
.02381 .06377 m
.02756 .06377 L
s
.02381 .08012 m
.02756 .08012 L
s
.02381 .11282 m
.02756 .11282 L
s
.02381 .12917 m
.02756 .12917 L
s
.02381 .14552 m
.02756 .14552 L
s
.02381 .16187 m
.02756 .16187 L
s
.02381 .19457 m
.02756 .19457 L
s
.02381 .21092 m
.02756 .21092 L
s
.02381 .22727 m
.02756 .22727 L
s
.02381 .24362 m
.02756 .24362 L
s
.02381 .27632 m
.02756 .27632 L
s
.02381 .29267 m
.02756 .29267 L
s
.02381 .30902 m
.02756 .30902 L
s
.02381 .32537 m
.02756 .32537 L
s
.02381 .35807 m
.02756 .35807 L
s
.02381 .37442 m
.02756 .37442 L
s
.02381 .39077 m
.02756 .39077 L
s
.02381 .40712 m
.02756 .40712 L
s
.02381 .43982 m
.02756 .43982 L
s
.02381 .45617 m
.02756 .45617 L
s
.02381 .47252 m
.02756 .47252 L
s
.02381 .48887 m
.02756 .48887 L
s
.02381 .52157 m
.02756 .52157 L
s
.02381 .53792 m
.02756 .53792 L
s
.02381 .55427 m
.02756 .55427 L
s
.02381 .57062 m
.02756 .57062 L
s
.02381 .60332 m
.02756 .60332 L
s
.25 Mabswid
.02381 0 m
.02381 .61803 L
s
gsave
.02381 .64303 -75 -4 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 17.8125 translate 1 -1 scale
63.000 11.250 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(coef) show
1.000 setlinewidth
grestore
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
.5 Mabswid
.02381 .27632 m
.02499 .27632 L
.02605 .27632 L
.02729 .27632 L
.02846 .27631 L
.03053 .27631 L
.03279 .27631 L
.03527 .2763 L
.0379 .27629 L
.04262 .27627 L
.04749 .27625 L
.05205 .27622 L
.06244 .27614 L
.07305 .27603 L
.08274 .2759 L
.10458 .27554 L
.12357 .27512 L
.14429 .27457 L
.18493 .27316 L
.22406 .27137 L
.26565 .26897 L
.30571 .26612 L
.34426 .26283 L
.38527 .25866 L
.42475 .25392 L
.46273 .24859 L
.50315 .24197 L
.54206 .23454 L
.58342 .22532 L
.62326 .21495 L
.66159 .20339 L
.70238 .18911 L
.74164 .17316 L
.77939 .1555 L
.8196 .13384 L
.85828 .10989 L
.89942 .08071 L
.93905 .04862 L
.97619 .01472 L
s
.02381 .40712 m
.02499 .40712 L
.02605 .40712 L
.02729 .40712 L
.02846 .40712 L
.03053 .40711 L
.03279 .40711 L
.03527 .4071 L
.0379 .40709 L
.04262 .40708 L
.04749 .40705 L
.05205 .40702 L
.06244 .40694 L
.07305 .40683 L
.08274 .4067 L
.10458 .40634 L
.12357 .40592 L
.14429 .40537 L
.18493 .40395 L
.22406 .40214 L
.26565 .3997 L
.30571 .39678 L
.34426 .39339 L
.38527 .38906 L
.42475 .38406 L
.46273 .37838 L
.50315 .3712 L
.54206 .36299 L
.58342 .35257 L
.62326 .34054 L
.66159 .32672 L
.70238 .30901 L
.74164 .28835 L
.77939 .26431 L
.8196 .23304 L
.85828 .1959 L
.89942 .14657 L
.93905 .08636 L
.97619 .01472 L
s
.02381 .60332 m
.02499 .60332 L
.02605 .60332 L
.02729 .60332 L
.02846 .60332 L
.03053 .60331 L
.03279 .60331 L
.03527 .6033 L
.0379 .6033 L
.04262 .60328 L
.04749 .60325 L
.05205 .60322 L
.06244 .60314 L
.07305 .60303 L
.08274 .60291 L
.10458 .60254 L
.12357 .60213 L
.14429 .60157 L
.18493 .60016 L
.22406 .59837 L
.26565 .59597 L
.30571 .59312 L
.34426 .58983 L
.38527 .58567 L
.42475 .58092 L
.46273 .57559 L
.50315 .56897 L
.54206 .56154 L
.58342 .55232 L
.62326 .54195 L
.66159 .53039 L
.70238 .51611 L
.74164 .50016 L
.77939 .4825 L
.8196 .46084 L
.85828 .4369 L
.89942 .40771 L
.93905 .37562 L
.97619 .34172 L
s
.02381 .60332 m
.02499 .60332 L
.02605 .60332 L
.02729 .60332 L
.02846 .60332 L
.03053 .60332 L
.03279 .60331 L
.03527 .60331 L
.0379 .6033 L
.04262 .60329 L
.04749 .60327 L
.05205 .60326 L
.06244 .6032 L
.07305 .60313 L
.08274 .60304 L
.10458 .6028 L
.12357 .60252 L
.14429 .60215 L
.18493 .6012 L
.22406 .6 L
.26565 .59837 L
.30571 .59643 L
.34426 .59417 L
.38527 .59128 L
.42475 .58795 L
.46273 .58416 L
.50315 .57937 L
.54206 .5739 L
.58342 .56696 L
.62326 .55894 L
.66159 .54972 L
.70238 .53791 L
.74164 .52414 L
.77939 .50811 L
.8196 .48726 L
.85828 .46251 L
.89942 .42962 L
.93905 .38948 L
.97619 .34172 L
s
% End of Graphics
MathPictureEnd

%%PSTrailer
end
grestore


%%EPS Trailer

%%Trailer
%%EOF
