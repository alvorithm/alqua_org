%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 106 3 338 146
%%HiResBoundingBox: 106.75 3.1875 337.125 145.5
%%Creator: (Mathematica 4.0 for X)
%%CreationDate: (Wednesday, May 31, 2000) (19:39:46)
%%Title: Clipboard
%%DocumentNeededResources: font Courier
%%DocumentSuppliedResources:
%%DocumentNeededFonts: Courier
%%DocumentSuppliedFonts:
%%DocumentFonts: Courier
%%EndComments
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 148.688 translate 1 -1 scale
gsave
150 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
 	     Momatrix
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        9 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        11 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
	      /Momatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/yscale exch def
	/ybias exch def
	/xscale exch def
	/xbias exch def
	/Momatrix
	xscale yscale matrix scale
	xbias ybias matrix translate
	matrix concatmatrix def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabsproc {
        0
        matrix defaultmatrix
        dtransform idtransform
        dup mul exch
        dup mul
        add sqrt
} bind def
/Mabswid {
        Mabsproc
        setlinewidth
} bind def
/Mabsdash {
        exch
        [
        exch
        {
        Mabsproc
        }
        forall
        ]
        exch
        setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse
% Here are the short operators
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def

/MFill {
	0 0 		moveto
	Mwidth 0 	lineto
	Mwidth Mheight 	lineto
	0 Mheight 	lineto
	fill
} bind def

/MPlotRegion {
	3 index
	Mwidth mul
	2 index
	Mheight mul
	translate
	exch sub
	Mheight mul
	/Mheight
	exch def
	exch sub
	Mwidth mul
	/Mwidth
	exch def
} bind def

/Mcharproc
{
  	currentfile
  	(x)
  	readhexstring
  	pop
  	0 get
  	exch
 	div
} bind def

/Mshadeproc
{
	dup
	3 1
	roll
	{
	dup
	Mcharproc
	3 1
	roll
	} repeat
	1 eq
	{
	setgray
	}
	{
	3 eq
	{
	setrgbcolor
	}
	{
	setcmykcolor
	} ifelse
	} ifelse
} bind def

/Mrectproc
{
	3 index
	2 index
	moveto
	2 index
	3 -1
	roll
	lineto
	dup
	3 1
	roll
	lineto
	lineto
	fill
} bind def

/_Mcolorimage
{
	7 1
	roll
	pop
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	9 index
	Mshadeproc
	Mrectproc
	} for
	pop
	} for
	pop pop pop pop
} bind def

/_Mimage
{
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub 
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	Mcharproc
	setgray
	Mrectproc
	} for
	pop
	} for
	pop pop pop
} bind def

/Mimage {
	4 index
	4 index
	mul 1600 gt
	{ image }
	{ _Mimage }
	ifelse
} def

/Mcolorimage {
	6 index
	6 index
	mul 1600 gt
	{ colorimage }
	{ _Mcolorimage }
	ifelse
} def
/Mnodistort true def
1.000000 1.000000 scale
106.750000 145.500000 translate
1.000000 -1.000000 scale
-0.000000 -0.000000 translate
/Mleft		0.000000 def
/Mbottom	0.000000 def
/Mwidth		230.375000 def
/Mheight	142.312500 def
0 setgray
0 setlinewidth
/Courier findfont 12 scalefont setfont
/Mfontsize 12 def
/Plain /Courier findfont def

%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.5 0.031746 0.0147151 5.40131 [
[.02381 .00222 -9 -9 ]
[.02381 .00222 9 0 ]
[.18254 .00222 -9 -9 ]
[.18254 .00222 9 0 ]
[.34127 .00222 -6 -9 ]
[.34127 .00222 6 0 ]
[.65873 .00222 -3 -9 ]
[.65873 .00222 3 0 ]
[.81746 .00222 -6 -9 ]
[.81746 .00222 6 0 ]
[.97619 .00222 -6 -9 ]
[.97619 .00222 6 0 ]
[.4875 .12274 -24 -4.5 ]
[.4875 .12274 0 4.5 ]
[.4875 .23077 -24 -4.5 ]
[.4875 .23077 0 4.5 ]
[.4875 .33879 -24 -4.5 ]
[.4875 .33879 0 4.5 ]
[.4875 .44682 -24 -4.5 ]
[.4875 .44682 0 4.5 ]
[.4875 .55485 -18 -4.5 ]
[.4875 .55485 0 4.5 ]
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.02381 .01472 m
.02381 .02097 L
s
[(-15)] .02381 .00222 0 1 Mshowa
.18254 .01472 m
.18254 .02097 L
s
[(-10)] .18254 .00222 0 1 Mshowa
.34127 .01472 m
.34127 .02097 L
s
[(-5)] .34127 .00222 0 1 Mshowa
.65873 .01472 m
.65873 .02097 L
s
[(5)] .65873 .00222 0 1 Mshowa
.81746 .01472 m
.81746 .02097 L
s
[(10)] .81746 .00222 0 1 Mshowa
.97619 .01472 m
.97619 .02097 L
s
[(15)] .97619 .00222 0 1 Mshowa
.125 Mabswid
.05556 .01472 m
.05556 .01847 L
s
.0873 .01472 m
.0873 .01847 L
s
.11905 .01472 m
.11905 .01847 L
s
.15079 .01472 m
.15079 .01847 L
s
.21429 .01472 m
.21429 .01847 L
s
.24603 .01472 m
.24603 .01847 L
s
.27778 .01472 m
.27778 .01847 L
s
.30952 .01472 m
.30952 .01847 L
s
.37302 .01472 m
.37302 .01847 L
s
.40476 .01472 m
.40476 .01847 L
s
.43651 .01472 m
.43651 .01847 L
s
.46825 .01472 m
.46825 .01847 L
s
.53175 .01472 m
.53175 .01847 L
s
.56349 .01472 m
.56349 .01847 L
s
.59524 .01472 m
.59524 .01847 L
s
.62698 .01472 m
.62698 .01847 L
s
.69048 .01472 m
.69048 .01847 L
s
.72222 .01472 m
.72222 .01847 L
s
.75397 .01472 m
.75397 .01847 L
s
.78571 .01472 m
.78571 .01847 L
s
.84921 .01472 m
.84921 .01847 L
s
.88095 .01472 m
.88095 .01847 L
s
.9127 .01472 m
.9127 .01847 L
s
.94444 .01472 m
.94444 .01847 L
s
.25 Mabswid
0 .01472 m
1 .01472 L
s
.5 .12274 m
.50625 .12274 L
s
[(0.02)] .4875 .12274 1 0 Mshowa
.5 .23077 m
.50625 .23077 L
s
[(0.04)] .4875 .23077 1 0 Mshowa
.5 .33879 m
.50625 .33879 L
s
[(0.06)] .4875 .33879 1 0 Mshowa
.5 .44682 m
.50625 .44682 L
s
[(0.08)] .4875 .44682 1 0 Mshowa
.5 .55485 m
.50625 .55485 L
s
[(0.1)] .4875 .55485 1 0 Mshowa
.125 Mabswid
.5 .04172 m
.50375 .04172 L
s
.5 .06873 m
.50375 .06873 L
s
.5 .09573 m
.50375 .09573 L
s
.5 .14975 m
.50375 .14975 L
s
.5 .17675 m
.50375 .17675 L
s
.5 .20376 m
.50375 .20376 L
s
.5 .25777 m
.50375 .25777 L
s
.5 .28478 m
.50375 .28478 L
s
.5 .31179 m
.50375 .31179 L
s
.5 .3658 m
.50375 .3658 L
s
.5 .39281 m
.50375 .39281 L
s
.5 .41981 m
.50375 .41981 L
s
.5 .47383 m
.50375 .47383 L
s
.5 .50083 m
.50375 .50083 L
s
.5 .52784 m
.50375 .52784 L
s
.5 .58185 m
.50375 .58185 L
s
.5 .60886 m
.50375 .60886 L
s
.25 Mabswid
.5 0 m
.5 .61803 L
s
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
.5 Mabswid
.02381 .02487 m
.03279 .03216 L
.03793 .03601 L
.04262 .03888 L
.04517 .04009 L
.04758 .04096 L
.0489 .04133 L
.05012 .04158 L
.05076 .04168 L
.05146 .04177 L
.05219 .04183 L
.05288 .04187 L
.05412 .04186 L
.05529 .04179 L
.05634 .04165 L
.05749 .04144 L
.05873 .04113 L
.06006 .04071 L
.06244 .03973 L
.07287 .03268 L
.08414 .02285 L
.08932 .01894 L
.09215 .01723 L
.09479 .016 L
.09594 .01558 L
.09704 .01525 L
.0983 .01497 L
.09945 .0148 L
.10073 .01472 L
.10191 .01474 L
.1032 .01487 L
.10386 .01498 L
.10458 .01514 L
.10583 .0155 L
.1072 .01602 L
.10996 .01745 L
.11252 .01923 L
.1149 .02125 L
.12603 .03421 L
.13569 .04698 L
.14078 .05273 L
.14356 .05529 L
.14616 .05722 L
.14752 .05803 L
.14877 .05864 L
.15015 .05916 L
.15091 .05938 L
.15164 .05955 L
.15289 .05972 L
.15405 .05976 L
Mistroke
.15533 .05966 L
.15604 .05955 L
.15668 .0594 L
.15797 .059 L
.15915 .0585 L
.1618 .05694 L
.16415 .05509 L
.16662 .05268 L
.18521 .02694 L
.19009 .02092 L
.19249 .01857 L
.19471 .01684 L
.19595 .01608 L
.19726 .01545 L
.19858 .01501 L
.19933 .01484 L
.20004 .01475 L
.20125 .01473 L
.20237 .01487 L
.2036 .01519 L
.20488 .01574 L
.20604 .01641 L
.20708 .01717 L
.20943 .01936 L
.2116 .02201 L
.21365 .02501 L
.22323 .04467 L
.23298 .06971 L
.23831 .08275 L
.24328 .09293 L
.24546 .0965 L
.24753 .09928 L
.24867 .10055 L
.24991 .1017 L
.25104 .10253 L
.25208 .1031 L
.25323 .10353 L
.25431 .10371 L
.25549 .10368 L
.25677 .10337 L
.25803 .10277 L
.25867 .10237 L
.25937 .10184 L
.26175 .09939 L
.26428 .09575 L
.26702 .09065 L
.27201 .07883 L
.28134 .05151 L
.28662 .03624 L
.28952 .02892 L
Mistroke
.29223 .02315 L
.29453 .01927 L
.29583 .01756 L
.29701 .01633 L
.2983 .01537 L
.29903 .01502 L
.29971 .01481 L
.30095 .01474 L
.30165 .01489 L
.30228 .01514 L
.30348 .01593 L
.30461 .01705 L
.30584 .01871 L
.30716 .021 L
.30986 .02733 L
.31231 .03503 L
.31705 .05491 L
.32154 .07925 L
.33164 .14714 L
.33717 .1864 L
.34236 .22004 L
.34692 .24425 L
.34949 .25481 L
.35184 .26218 L
.3531 .26514 L
.35427 .26725 L
.35556 .2688 L
.35628 .26931 L
.35693 .26956 L
.35762 .26959 L
.35825 .2694 L
.35895 .26895 L
.35969 .26821 L
.36093 .26633 L
.36163 .26491 L
.36229 .26334 L
.36467 .25582 L
.36693 .24603 L
.37117 .2212 L
.38071 .14239 L
.38567 .0967 L
.39034 .05758 L
.39292 .03969 L
.39428 .03184 L
.39571 .02495 L
.39692 .02039 L
.39756 .01848 L
.39825 .01684 L
.39945 .01507 L
.40057 .01477 L
Mistroke
.40181 .01605 L
.40295 .01883 L
.4042 .02377 L
.40483 .02706 L
.40553 .03131 L
.40669 .03997 L
.40794 .05156 L
.41021 .07881 L
.41256 .11619 L
.41479 .16095 L
.41898 .27097 L
.424 .45046 L
Mfstroke
.424 .45046 m
.42765 .61803 L
s
.57234 .61803 m
.57666 .42375 L
.58171 .2505 L
.58438 .18014 L
.58721 .12034 L
.58992 .07696 L
.59125 .06026 L
.59247 .04742 L
.59357 .03788 L
.59476 .02944 L
.59597 .02299 L
.59724 .01826 L
.5985 .01556 L
.5997 .01472 L
.60077 .01529 L
.60194 .01724 L
.60321 .02081 L
.60455 .02611 L
.60697 .03902 L
.61129 .07043 L
.61605 .11241 L
.62549 .19654 L
.63024 .23036 L
.63293 .24535 L
.63543 .25619 L
.63685 .26095 L
.63819 .2645 L
.63939 .26689 L
.64069 .26863 L
.64137 .26919 L
.64212 .26953 L
.64289 .26959 L
.64362 .26937 L
.64492 .26831 L
.64565 .26736 L
.64632 .26627 L
.64759 .26362 L
.64877 .2605 L
.65144 .25129 L
.65629 .2278 L
.66602 .16394 L
.67651 .09121 L
.68134 .06309 L
.68397 .0501 L
.68642 .03971 L
.68869 .03166 L
.69076 .02569 L
.69306 .02059 L
.69432 .01847 L
.69551 .01691 L
Mistroke
.69664 .01583 L
.69769 .01515 L
.69884 .01477 L
.70008 .01477 L
.70137 .0152 L
.70261 .01601 L
.70371 .01705 L
.70492 .0185 L
.7071 .02191 L
.70942 .02652 L
.7136 .03683 L
.72382 .06706 L
.7283 .07964 L
.73322 .09115 L
.73581 .09589 L
.73822 .09936 L
.73953 .10083 L
.74078 .10195 L
.74146 .10246 L
.74221 .10291 L
.74351 .10346 L
.7442 .10363 L
.74484 .10371 L
.74555 .10372 L
.74631 .10363 L
.74707 .10344 L
.74787 .10313 L
.74855 .10278 L
.74929 .10231 L
.75063 .10123 L
.75206 .09976 L
.75464 .09634 L
.76008 .08632 L
.76521 .07432 L
.77481 .04952 L
.77984 .03753 L
.78454 .02807 L
.7871 .02386 L
.78944 .02067 L
.79204 .01791 L
.79347 .01675 L
.79483 .01589 L
.79599 .01535 L
.79705 .015 L
.79827 .01477 L
.79941 .01472 L
.80048 .01481 L
.80145 .01502 L
.80253 .01537 L
.80366 .01587 L
Mistroke
.80604 .01737 L
.80825 .01925 L
.81328 .02493 L
.82235 .03797 L
.83196 .05111 L
.83438 .0537 L
.83698 .05603 L
.83847 .05713 L
.83983 .05798 L
.84122 .05867 L
.84251 .05917 L
.84366 .05948 L
.8449 .05969 L
.8456 .05975 L
.84626 .05976 L
.8475 .05968 L
.84869 .05948 L
.84978 .05918 L
.85098 .05874 L
.85225 .05814 L
.85478 .05657 L
.8575 .05437 L
.8624 .04927 L
.87354 .03479 L
.87861 .02827 L
.88399 .0223 L
.88859 .01841 L
.89121 .01678 L
.89367 .01567 L
.89491 .01527 L
.89622 .01497 L
.89734 .0148 L
.89856 .01472 L
.89988 .01475 L
.90062 .01481 L
.90129 .0149 L
.9026 .01516 L
.90383 .0155 L
.90517 .01598 L
.90659 .0166 L
.90914 .01796 L
.91489 .02206 L
.92459 .0305 L
.92993 .03493 L
.93257 .03684 L
.93501 .03839 L
.93757 .03974 L
.9399 .04069 L
.94122 .04111 L
.94248 .04143 L
Mistroke
.9438 .04167 L
.94454 .04177 L
.94523 .04183 L
.94635 .04188 L
.94739 .04186 L
.94854 .04177 L
.94977 .0416 L
.95106 .04134 L
.95228 .04101 L
.95457 .0402 L
.95678 .03919 L
.95912 .0379 L
.96334 .03512 L
.97287 .02755 L
.97619 .02487 L
Mfstroke
% End of Graphics
MathPictureEnd

%%PSTrailer
end
grestore


%%EPS Trailer

%%Trailer
%%EOF
