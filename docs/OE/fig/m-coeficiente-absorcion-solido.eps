%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 106 3 357 158
%%HiResBoundingBox: 106.75 3.1875 356.75 157.688
%%Creator: (Mathematica 4.0 for X)
%%CreationDate: (Wednesday, March 8, 2000) (20:19:46)
%%Title: Clipboard
%%DocumentNeededResources: font Math1Mono
%%+ font Courier
%%DocumentSuppliedResources:
%%DocumentNeededFonts: Math1Mono
%%+ Courier
%%DocumentSuppliedFonts:
%%DocumentFonts: Math1Mono
%%+ Courier
%%EndComments
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 160.875 translate 1 -1 scale
gsave
150 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
 	     Momatrix
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        9 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        11 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
	      /Momatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/yscale exch def
	/ybias exch def
	/xscale exch def
	/xbias exch def
	/Momatrix
	xscale yscale matrix scale
	xbias ybias matrix translate
	matrix concatmatrix def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabsproc {
        0
        matrix defaultmatrix
        dtransform idtransform
        dup mul exch
        dup mul
        add sqrt
} bind def
/Mabswid {
        Mabsproc
        setlinewidth
} bind def
/Mabsdash {
        exch
        [
        exch
        {
        Mabsproc
        }
        forall
        ]
        exch
        setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse
% Here are the short operators
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def

/MFill {
	0 0 		moveto
	Mwidth 0 	lineto
	Mwidth Mheight 	lineto
	0 Mheight 	lineto
	fill
} bind def

/MPlotRegion {
	3 index
	Mwidth mul
	2 index
	Mheight mul
	translate
	exch sub
	Mheight mul
	/Mheight
	exch def
	exch sub
	Mwidth mul
	/Mwidth
	exch def
} bind def

/Mcharproc
{
  	currentfile
  	(x)
  	readhexstring
  	pop
  	0 get
  	exch
 	div
} bind def

/Mshadeproc
{
	dup
	3 1
	roll
	{
	dup
	Mcharproc
	3 1
	roll
	} repeat
	1 eq
	{
	setgray
	}
	{
	3 eq
	{
	setrgbcolor
	}
	{
	setcmykcolor
	} ifelse
	} ifelse
} bind def

/Mrectproc
{
	3 index
	2 index
	moveto
	2 index
	3 -1
	roll
	lineto
	dup
	3 1
	roll
	lineto
	lineto
	fill
} bind def

/_Mcolorimage
{
	7 1
	roll
	pop
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	9 index
	Mshadeproc
	Mrectproc
	} for
	pop
	} for
	pop pop pop pop
} bind def

/_Mimage
{
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub 
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	Mcharproc
	setgray
	Mrectproc
	} for
	pop
	} for
	pop pop pop
} bind def

/Mimage {
	4 index
	4 index
	mul 1600 gt
	{ image }
	{ _Mimage }
	ifelse
} def

/Mcolorimage {
	6 index
	6 index
	mul 1600 gt
	{ colorimage }
	{ _Mcolorimage }
	ifelse
} def
/Mnodistort true def
1.000000 1.000000 scale
106.750000 157.687500 translate
1.000000 -1.000000 scale
-0.000000 -0.000000 translate
/Mleft		0.000000 def
/Mbottom	0.000000 def
/Mwidth		250.000000 def
/Mheight	154.500000 def
0 setgray
0 setlinewidth
/Courier findfont 12 scalefont setfont
/Mfontsize 12 def
/Plain /Courier findfont def

%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0238095 0.047619 0.0147151 1.08065 [
[.2619 .00222 -3 -9 ]
[.2619 .00222 3 0 ]
[.5 .00222 -6 -9 ]
[.5 .00222 6 0 ]
[.7381 .00222 -6 -9 ]
[.7381 .00222 6 0 ]
[.97619 .00222 -6 -9 ]
[.97619 .00222 6 0 ]
[1.025 .01472 0 -4.90625 ]
[1.025 .01472 10 4.90625 ]
[.01131 .12278 -18 -4.5 ]
[.01131 .12278 0 4.5 ]
[.01131 .23085 -18 -4.5 ]
[.01131 .23085 0 4.5 ]
[.01131 .33891 -18 -4.5 ]
[.01131 .33891 0 4.5 ]
[.01131 .44698 -18 -4.5 ]
[.01131 .44698 0 4.5 ]
[.01131 .55504 -18 -4.5 ]
[.01131 .55504 0 4.5 ]
[.02381 .64303 -5 0 ]
[.02381 .64303 5 9.8125 ]
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.2619 .01472 m
.2619 .02097 L
s
[(5)] .2619 .00222 0 1 Mshowa
.5 .01472 m
.5 .02097 L
s
[(10)] .5 .00222 0 1 Mshowa
.7381 .01472 m
.7381 .02097 L
s
[(15)] .7381 .00222 0 1 Mshowa
.97619 .01472 m
.97619 .02097 L
s
[(20)] .97619 .00222 0 1 Mshowa
.125 Mabswid
.07143 .01472 m
.07143 .01847 L
s
.11905 .01472 m
.11905 .01847 L
s
.16667 .01472 m
.16667 .01847 L
s
.21429 .01472 m
.21429 .01847 L
s
.30952 .01472 m
.30952 .01847 L
s
.35714 .01472 m
.35714 .01847 L
s
.40476 .01472 m
.40476 .01847 L
s
.45238 .01472 m
.45238 .01847 L
s
.54762 .01472 m
.54762 .01847 L
s
.59524 .01472 m
.59524 .01847 L
s
.64286 .01472 m
.64286 .01847 L
s
.69048 .01472 m
.69048 .01847 L
s
.78571 .01472 m
.78571 .01847 L
s
.83333 .01472 m
.83333 .01847 L
s
.88095 .01472 m
.88095 .01847 L
s
.92857 .01472 m
.92857 .01847 L
s
.25 Mabswid
0 .01472 m
1 .01472 L
s
gsave
1.025 .01472 -61 -8.90625 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 17.8125 translate 1 -1 scale
63.000 11.250 moveto
%%IncludeResource: font Math1Mono
%%IncludeFont: Math1Mono
/Math1Mono findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(w) show
1.000 setlinewidth
grestore
.02381 .12278 m
.03006 .12278 L
s
[(0.1)] .01131 .12278 1 0 Mshowa
.02381 .23085 m
.03006 .23085 L
s
[(0.2)] .01131 .23085 1 0 Mshowa
.02381 .33891 m
.03006 .33891 L
s
[(0.3)] .01131 .33891 1 0 Mshowa
.02381 .44698 m
.03006 .44698 L
s
[(0.4)] .01131 .44698 1 0 Mshowa
.02381 .55504 m
.03006 .55504 L
s
[(0.5)] .01131 .55504 1 0 Mshowa
.125 Mabswid
.02381 .03633 m
.02756 .03633 L
s
.02381 .05794 m
.02756 .05794 L
s
.02381 .07955 m
.02756 .07955 L
s
.02381 .10117 m
.02756 .10117 L
s
.02381 .14439 m
.02756 .14439 L
s
.02381 .16601 m
.02756 .16601 L
s
.02381 .18762 m
.02756 .18762 L
s
.02381 .20923 m
.02756 .20923 L
s
.02381 .25246 m
.02756 .25246 L
s
.02381 .27407 m
.02756 .27407 L
s
.02381 .29568 m
.02756 .29568 L
s
.02381 .3173 m
.02756 .3173 L
s
.02381 .36052 m
.02756 .36052 L
s
.02381 .38214 m
.02756 .38214 L
s
.02381 .40375 m
.02756 .40375 L
s
.02381 .42536 m
.02756 .42536 L
s
.02381 .46859 m
.02756 .46859 L
s
.02381 .4902 m
.02756 .4902 L
s
.02381 .51181 m
.02756 .51181 L
s
.02381 .53343 m
.02756 .53343 L
s
.02381 .57665 m
.02756 .57665 L
s
.02381 .59827 m
.02756 .59827 L
s
.25 Mabswid
.02381 0 m
.02381 .61803 L
s
gsave
.02381 .64303 -66 -4 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 17.8125 translate 1 -1 scale
63.000 11.250 moveto
%%IncludeResource: font Math1Mono
%%IncludeFont: Math1Mono
/Math1Mono findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(k) show
1.000 setlinewidth
grestore
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
.5 Mabswid
.02381 .01472 m
.06244 .01508 L
.10458 .01553 L
.14415 .01605 L
.18221 .01674 L
.20178 .0172 L
.22272 .01785 L
.23293 .01824 L
.24402 .01874 L
.25361 .01926 L
.26416 .01995 L
.27372 .02072 L
.284 .02175 L
.29486 .02319 L
.30503 .02501 L
.31513 .02754 L
.32085 .02948 L
.32616 .03175 L
.33126 .03453 L
.33589 .03779 L
.34122 .04282 L
.34383 .04597 L
.34625 .04947 L
.35091 .0583 L
.35337 .06455 L
.35602 .07302 L
.35879 .08462 L
.36141 .09928 L
.36377 .11683 L
.36633 .14274 L
.36856 .17356 L
.37092 .21753 L
.37349 .28292 L
.37586 .35752 L
.37792 .42307 L
.37908 .45186 L
.38013 .46836 L
.38138 .47269 L
.38255 .46119 L
.38363 .43948 L
.3848 .40808 L
.38716 .33782 L
.38937 .28059 L
.39167 .23703 L
.39289 .22059 L
.3942 .20761 L
.3949 .20256 L
.39565 .19839 L
.39636 .19566 L
.39702 .19411 L
Mistroke
.39827 .19353 L
.39897 .19438 L
.3996 .19573 L
.40085 .19948 L
.40202 .20322 L
.40324 .20585 L
.40389 .20619 L
.40458 .2055 L
.40531 .20348 L
.406 .20037 L
.40729 .19192 L
.40978 .1712 L
.41109 .16095 L
.41248 .15194 L
.4132 .14817 L
.414 .1448 L
.41472 .14245 L
.4154 .14088 L
.41665 .13956 L
.41796 .14036 L
.41908 .14283 L
.42031 .14741 L
.421 .15088 L
.42163 .15454 L
.42304 .16436 L
.42559 .18465 L
.4267 .1923 L
.4279 .19768 L
.42922 .19902 L
.43045 .19595 L
.43111 .19295 L
.43183 .18897 L
.43314 .18089 L
.43431 .17393 L
.43559 .16745 L
.43679 .16299 L
.43791 .16024 L
.4391 .15881 L
.44038 .1588 L
.4415 .15993 L
.44269 .16207 L
.4437 .16452 L
.44481 .16769 L
.44749 .17623 L
.45002 .1834 L
.4507 .18489 L
.45142 .18621 L
.45221 .18732 L
.45293 .18802 L
.4542 .18851 L
Mistroke
.45491 .18841 L
.45559 .1881 L
.45811 .18568 L
.45949 .18403 L
.46079 .18264 L
.46201 .1817 L
.46332 .18123 L
.46452 .18139 L
.46562 .18204 L
.46677 .18321 L
.46804 .185 L
.47059 .18951 L
.47194 .19185 L
.47269 .19296 L
.47339 .19384 L
.47405 .19447 L
.47476 .19492 L
.47601 .19504 L
.47719 .19434 L
.4785 .19272 L
.47915 .19163 L
.47986 .1903 L
.48114 .18767 L
.48235 .1852 L
.48361 .183 L
.4847 .18174 L
.48588 .18133 L
.48713 .18238 L
.48832 .18511 L
.48938 .18931 L
.49053 .19607 L
.49178 .20644 L
.49311 .22115 L
.49548 .25636 L
.49753 .28879 L
.49869 .30178 L
.49974 .30688 L
.50098 .30284 L
.50215 .28989 L
.50323 .27284 L
.50441 .2521 L
.50698 .2116 L
.50768 .20301 L
.50842 .19532 L
.50906 .18981 L
.50975 .18506 L
.51099 .17944 L
.51214 .17756 L
.51285 .17799 L
.51352 .17951 L
Mistroke
.51477 .18533 L
.5159 .19409 L
.5171 .20705 L
.51926 .2387 L
.52057 .26029 L
.52181 .27828 L
.52292 .28846 L
.52414 .28976 L
.52543 .2792 L
.52662 .26103 L
.52929 .21156 L
.53163 .17607 L
.53294 .16171 L
.53413 .15196 L
.53481 .14761 L
.53554 .14401 L
.53685 .13998 L
.53757 .13901 L
.53825 .13893 L
.53899 .13973 L
.53979 .14162 L
.54048 .1441 L
.54122 .14767 L
.54258 .15625 L
.54391 .16642 L
.54513 .17567 L
.54626 .18223 L
.54746 .18493 L
.54866 .1822 L
.54997 .17379 L
.55236 .15248 L
.5534 .14374 L
.55452 .13572 L
.55522 .13164 L
.55586 .12849 L
.55712 .12397 L
.55776 .1225 L
.55847 .1215 L
.55921 .12115 L
.5599 .12145 L
.56115 .12356 L
.56231 .12733 L
.56294 .13019 L
.56363 .13398 L
.56489 .14269 L
.56761 .16842 L
.56895 .18202 L
.57017 .19205 L
.57086 .19568 L
.57159 .19751 L
Mistroke
.57232 .19721 L
.57312 .19468 L
.57379 .19122 L
.5745 .18665 L
.57579 .17774 L
.57709 .16973 L
.57778 .16636 L
.57851 .16356 L
.57915 .16179 L
.57985 .16057 L
.58108 .16019 L
.58228 .16187 L
.58357 .16572 L
.58478 .17115 L
.5859 .17752 L
.58839 .19617 L
.59065 .2178 L
.59309 .24615 L
.59437 .26397 L
.59572 .28644 L
.59689 .31044 L
.59817 .3445 L
.59933 .38545 L
.60042 .43466 L
.60254 .55595 L
.60374 .61505 L
Mfstroke
.60374 .61505 m
.60391 .61803 L
s
.60548 .61803 m
.60615 .60058 L
.60681 .56712 L
.60753 .52517 L
.60876 .45676 L
.61007 .39794 L
.61136 .35781 L
.61253 .33332 L
.61366 .31842 L
.61484 .30962 L
.61612 .3063 L
.61684 .30679 L
.61749 .30859 L
.61876 .31587 L
.61996 .32796 L
.62064 .33758 L
.62136 .35052 L
.62265 .3827 L
.62336 .40677 L
.62403 .43399 L
.62556 .51225 L
.62681 .58181 L
.62751 .61247 L
s
.62751 .61247 m
.62773 .61803 L
s
.62924 .61803 m
.62937 .61679 L
.63053 .56196 L
.6319 .47938 L
.63265 .43844 L
.63335 .40593 L
.63459 .36311 L
.63524 .34761 L
.63595 .3359 L
.63722 .32589 L
.63843 .32709 L
.63951 .33401 L
.64069 .34341 L
.64198 .349 L
.64263 .34765 L
.64335 .34204 L
.64462 .32218 L
.64582 .29578 L
.64808 .24331 L
.64932 .21964 L
.65047 .20204 L
.65145 .1903 L
.65251 .18093 L
.65367 .17405 L
.65473 .17083 L
.65597 .1706 L
.65711 .1738 L
.65835 .18132 L
.65968 .19425 L
.66082 .2099 L
.6619 .22807 L
.66434 .27485 L
.6656 .29232 L
.66629 .29683 L
.66693 .29686 L
.66816 .28602 L
.66932 .2661 L
.6707 .2378 L
.67215 .20978 L
.6735 .18885 L
.67475 .17433 L
.67585 .16542 L
.67702 .15942 L
.67832 .15676 L
.6795 .15785 L
.68077 .16279 L
.68148 .1674 L
.68214 .17292 L
.68335 .18641 L
.68464 .20583 L
Mistroke
.68683 .24992 L
.68804 .27607 L
.68919 .29629 L
.69025 .30613 L
.69142 .30427 L
.69247 .2925 L
.69345 .27651 L
.69462 .25618 L
.69588 .237 L
.69706 .22395 L
.69816 .21699 L
.69944 .21521 L
.70008 .21696 L
.70079 .22101 L
.70202 .23376 L
.70317 .2531 L
.70443 .28428 L
.70507 .30496 L
.70577 .33249 L
.70701 .39595 L
.70817 .47796 L
.70954 .61065 L
Mfstroke
.70954 .61065 m
.70959 .61803 L
s
.71888 .61803 m
.71961 .53201 L
.72087 .4204 L
.72224 .33124 L
.72351 .27125 L
.72466 .23001 L
.72571 .20029 L
.72684 .17467 L
.72807 .15239 L
.73026 .12308 L
.73234 .10338 L
.73478 .08672 L
.73738 .07393 L
.73983 .06495 L
.74206 .05862 L
.74694 .04861 L
.7494 .04495 L
.7521 .04164 L
.75687 .03712 L
.76133 .03397 L
.76659 .03113 L
.77138 .02912 L
.77661 .02737 L
.78215 .02588 L
.79208 .02387 L
.80126 .02251 L
.81113 .02139 L
.82203 .02044 L
.84139 .01922 L
.85228 .01871 L
.86226 .01833 L
.8812 .01774 L
.90191 .01726 L
.92154 .0169 L
.9425 .0166 L
.97619 .01624 L
s
% End of Graphics
MathPictureEnd

%%PSTrailer
end
grestore


%%EPS Trailer

%%Trailer
%%EOF
