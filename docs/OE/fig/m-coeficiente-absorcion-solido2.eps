%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 106 3 338 146
%%HiResBoundingBox: 106.75 3.1875 337.125 145.5
%%Creator: (Mathematica 4.0 for X)
%%CreationDate: (Thursday, March 9, 2000) (10:47:29)
%%Title: Clipboard
%%DocumentNeededResources: font Math1Mono
%%+ font Courier
%%DocumentSuppliedResources:
%%DocumentNeededFonts: Math1Mono
%%+ Courier
%%DocumentSuppliedFonts:
%%DocumentFonts: Math1Mono
%%+ Courier
%%EndComments
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 148.688 translate 1 -1 scale
gsave
150 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
 	     Momatrix
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        9 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        11 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
	      /Momatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/yscale exch def
	/ybias exch def
	/xscale exch def
	/xbias exch def
	/Momatrix
	xscale yscale matrix scale
	xbias ybias matrix translate
	matrix concatmatrix def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabsproc {
        0
        matrix defaultmatrix
        dtransform idtransform
        dup mul exch
        dup mul
        add sqrt
} bind def
/Mabswid {
        Mabsproc
        setlinewidth
} bind def
/Mabsdash {
        exch
        [
        exch
        {
        Mabsproc
        }
        forall
        ]
        exch
        setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse
% Here are the short operators
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def

/MFill {
	0 0 		moveto
	Mwidth 0 	lineto
	Mwidth Mheight 	lineto
	0 Mheight 	lineto
	fill
} bind def

/MPlotRegion {
	3 index
	Mwidth mul
	2 index
	Mheight mul
	translate
	exch sub
	Mheight mul
	/Mheight
	exch def
	exch sub
	Mwidth mul
	/Mwidth
	exch def
} bind def

/Mcharproc
{
  	currentfile
  	(x)
  	readhexstring
  	pop
  	0 get
  	exch
 	div
} bind def

/Mshadeproc
{
	dup
	3 1
	roll
	{
	dup
	Mcharproc
	3 1
	roll
	} repeat
	1 eq
	{
	setgray
	}
	{
	3 eq
	{
	setrgbcolor
	}
	{
	setcmykcolor
	} ifelse
	} ifelse
} bind def

/Mrectproc
{
	3 index
	2 index
	moveto
	2 index
	3 -1
	roll
	lineto
	dup
	3 1
	roll
	lineto
	lineto
	fill
} bind def

/_Mcolorimage
{
	7 1
	roll
	pop
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	9 index
	Mshadeproc
	Mrectproc
	} for
	pop
	} for
	pop pop pop pop
} bind def

/_Mimage
{
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub 
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	Mcharproc
	setgray
	Mrectproc
	} for
	pop
	} for
	pop pop pop
} bind def

/Mimage {
	4 index
	4 index
	mul 1600 gt
	{ image }
	{ _Mimage }
	ifelse
} def

/Mcolorimage {
	6 index
	6 index
	mul 1600 gt
	{ colorimage }
	{ _Mcolorimage }
	ifelse
} def
/Mnodistort true def
1.000000 1.000000 scale
106.750000 145.500000 translate
1.000000 -1.000000 scale
-0.000000 -0.000000 translate
/Mleft		0.000000 def
/Mbottom	0.000000 def
/Mwidth		230.375000 def
/Mheight	142.312500 def
0 setgray
0 setlinewidth
/Courier findfont 12 scalefont setfont
/Mfontsize 12 def
/Plain /Courier findfont def

%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
-0.293651 0.0793651 0.0147151 29.7556 [
[.18254 .00222 -3 -9 ]
[.18254 .00222 3 0 ]
[.34127 .00222 -3 -9 ]
[.34127 .00222 3 0 ]
[.5 .00222 -6 -9 ]
[.5 .00222 6 0 ]
[.65873 .00222 -6 -9 ]
[.65873 .00222 6 0 ]
[.81746 .00222 -6 -9 ]
[.81746 .00222 6 0 ]
[.97619 .00222 -6 -9 ]
[.97619 .00222 6 0 ]
[1.025 .01472 0 -4.90625 ]
[1.025 .01472 10 4.90625 ]
[.01131 .16349 -30 -4.5 ]
[.01131 .16349 0 4.5 ]
[.01131 .31227 -24 -4.5 ]
[.01131 .31227 0 4.5 ]
[.01131 .46105 -30 -4.5 ]
[.01131 .46105 0 4.5 ]
[.01131 .60983 -24 -4.5 ]
[.01131 .60983 0 4.5 ]
[.02381 .64303 -5 0 ]
[.02381 .64303 5 9.8125 ]
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.18254 .01472 m
.18254 .02097 L
s
[(6)] .18254 .00222 0 1 Mshowa
.34127 .01472 m
.34127 .02097 L
s
[(8)] .34127 .00222 0 1 Mshowa
.5 .01472 m
.5 .02097 L
s
[(10)] .5 .00222 0 1 Mshowa
.65873 .01472 m
.65873 .02097 L
s
[(12)] .65873 .00222 0 1 Mshowa
.81746 .01472 m
.81746 .02097 L
s
[(14)] .81746 .00222 0 1 Mshowa
.97619 .01472 m
.97619 .02097 L
s
[(16)] .97619 .00222 0 1 Mshowa
.125 Mabswid
.06349 .01472 m
.06349 .01847 L
s
.10317 .01472 m
.10317 .01847 L
s
.14286 .01472 m
.14286 .01847 L
s
.22222 .01472 m
.22222 .01847 L
s
.2619 .01472 m
.2619 .01847 L
s
.30159 .01472 m
.30159 .01847 L
s
.38095 .01472 m
.38095 .01847 L
s
.42063 .01472 m
.42063 .01847 L
s
.46032 .01472 m
.46032 .01847 L
s
.53968 .01472 m
.53968 .01847 L
s
.57937 .01472 m
.57937 .01847 L
s
.61905 .01472 m
.61905 .01847 L
s
.69841 .01472 m
.69841 .01847 L
s
.7381 .01472 m
.7381 .01847 L
s
.77778 .01472 m
.77778 .01847 L
s
.85714 .01472 m
.85714 .01847 L
s
.89683 .01472 m
.89683 .01847 L
s
.93651 .01472 m
.93651 .01847 L
s
.25 Mabswid
0 .01472 m
1 .01472 L
s
gsave
1.025 .01472 -61 -8.90625 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 17.8125 translate 1 -1 scale
63.000 11.250 moveto
%%IncludeResource: font Math1Mono
%%IncludeFont: Math1Mono
/Math1Mono findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(w) show
1.000 setlinewidth
grestore
.02381 .16349 m
.03006 .16349 L
s
[(0.005)] .01131 .16349 1 0 Mshowa
.02381 .31227 m
.03006 .31227 L
s
[(0.01)] .01131 .31227 1 0 Mshowa
.02381 .46105 m
.03006 .46105 L
s
[(0.015)] .01131 .46105 1 0 Mshowa
.02381 .60983 m
.03006 .60983 L
s
[(0.02)] .01131 .60983 1 0 Mshowa
.125 Mabswid
.02381 .04447 m
.02756 .04447 L
s
.02381 .07423 m
.02756 .07423 L
s
.02381 .10398 m
.02756 .10398 L
s
.02381 .13374 m
.02756 .13374 L
s
.02381 .19325 m
.02756 .19325 L
s
.02381 .223 m
.02756 .223 L
s
.02381 .25276 m
.02756 .25276 L
s
.02381 .28252 m
.02756 .28252 L
s
.02381 .34203 m
.02756 .34203 L
s
.02381 .37178 m
.02756 .37178 L
s
.02381 .40154 m
.02756 .40154 L
s
.02381 .43129 m
.02756 .43129 L
s
.02381 .49081 m
.02756 .49081 L
s
.02381 .52056 m
.02756 .52056 L
s
.02381 .55032 m
.02756 .55032 L
s
.02381 .58007 m
.02756 .58007 L
s
.25 Mabswid
.02381 0 m
.02381 .61803 L
s
gsave
.02381 .64303 -66 -4 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 17.8125 translate 1 -1 scale
63.000 11.250 moveto
%%IncludeResource: font Math1Mono
%%IncludeFont: Math1Mono
/Math1Mono findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(k) show
1.000 setlinewidth
grestore
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
.5 Mabswid
.02381 .02355 m
.04262 .02416 L
.06244 .02493 L
.08426 .02598 L
.10458 .02723 L
.12297 .02867 L
.14264 .03071 L
.15285 .03206 L
.16394 .03386 L
.17441 .036 L
.18408 .03853 L
.19375 .04187 L
.20281 .04612 L
.208 .0493 L
.21274 .05289 L
.21822 .05816 L
.22343 .06479 L
.22846 .07339 L
.23302 .08397 L
.23555 .09142 L
.23828 .10118 L
.24324 .12476 L
.24789 .15601 L
.25281 .19885 L
.25498 .21883 L
.25734 .2382 L
.25842 .24531 L
.25957 .2511 L
.26054 .25435 L
.26163 .25593 L
.26286 .25507 L
.26355 .25337 L
.26418 .25107 L
.26535 .24519 L
.26658 .23705 L
.2711 .19853 L
.27637 .15602 L
.27893 .13988 L
.28126 .12788 L
.2855 .11159 L
.28782 .10507 L
.29002 .10016 L
.29241 .09597 L
.29461 .09298 L
.29703 .09052 L
.29825 .08957 L
.2996 .08871 L
.30089 .08806 L
.30209 .0876 L
.30341 .08725 L
Mistroke
.30414 .08711 L
.30481 .08703 L
.30604 .08697 L
.30673 .08699 L
.30736 .08704 L
.30853 .0872 L
.30976 .08747 L
.31087 .0878 L
.31205 .08824 L
.31419 .08926 L
.31673 .09084 L
.31904 .09262 L
.32419 .09776 L
.32978 .10531 L
.33506 .11458 L
.33994 .12531 L
.34459 .13784 L
.34959 .15428 L
.35864 .19294 L
.36849 .24574 L
.3737 .27254 L
.37656 .28459 L
.37796 .28949 L
.37926 .29332 L
.3805 .29638 L
.38188 .299 L
.38254 .29998 L
.38325 .30085 L
.38401 .30154 L
.38471 .302 L
.38535 .30226 L
.38604 .30238 L
.3873 .30222 L
.38853 .30165 L
.38966 .30081 L
.39189 .29851 L
.39435 .29537 L
.39933 .28878 L
.41034 .27846 L
.41517 .27437 L
.41772 .27164 L
.42045 .26808 L
.42532 .25982 L
.42986 .25016 L
.43977 .22655 L
.44538 .215 L
.44814 .21053 L
.45069 .20731 L
.45188 .20614 L
.453 .20524 L
Mistroke
.45417 .20454 L
.45545 .20403 L
.45675 .20383 L
.45794 .20393 L
.4586 .2041 L
.45931 .20439 L
.46062 .20518 L
.46127 .20571 L
.46195 .20637 L
.46317 .20782 L
.46594 .21236 L
.46833 .21781 L
.47095 .2255 L
.47579 .24472 L
.48031 .2684 L
.48547 .30058 L
.48819 .31814 L
.49108 .33542 L
.4936 .34784 L
.49504 .35325 L
.49569 .35524 L
.49638 .35697 L
.49761 .35909 L
.49874 .35987 L
.49996 .35942 L
.50064 .35857 L
.50128 .35739 L
.50256 .35396 L
.50394 .34869 L
.50645 .33549 L
.51113 .30212 L
.52165 .22138 L
.52634 .19271 L
.53131 .169 L
.53555 .15387 L
.53796 .14725 L
.54021 .14231 L
.54147 .14009 L
.5428 .13815 L
.54406 .13672 L
.5452 .13579 L
.5459 .13538 L
.54654 .13513 L
.54725 .135 L
.548 .13502 L
.54925 .13545 L
.54997 .13593 L
.55063 .13655 L
.55191 .13823 L
.55313 .14048 L
Mistroke
.55422 .14312 L
.55541 .14675 L
.55669 .15174 L
.55806 .15844 L
.55934 .16631 L
.56051 .17516 L
.56271 .19724 L
.56392 .21345 L
.56507 .23241 L
.56711 .27749 L
.56826 .31184 L
.56934 .35146 L
.57061 .41072 L
.5718 .48214 L
Mfstroke
.5718 .48214 m
.57344 .61803 L
s
.58517 .61803 m
.58618 .51974 L
.58743 .43244 L
.58881 .3578 L
.59015 .30247 L
.59137 .26269 L
.59269 .22873 L
.59413 .19945 L
.59656 .16318 L
.59789 .14832 L
.59912 .13677 L
.60153 .11899 L
.6038 .10637 L
.60584 .0975 L
.60805 .08981 L
.61046 .08316 L
.61302 .07758 L
.61759 .07028 L
.62012 .06736 L
.62252 .06513 L
.6247 .0635 L
.62703 .06212 L
.62954 .061 L
.63066 .06061 L
.63187 .06026 L
.63262 .06009 L
.6333 .05995 L
.63394 .05984 L
.63465 .05975 L
.63587 .05964 L
.63716 .0596 L
.63839 .05963 L
.63955 .05973 L
.6406 .05987 L
.64173 .06009 L
.64297 .06039 L
.64428 .0608 L
.64663 .06175 L
.6488 .06291 L
.65084 .06424 L
.65547 .06836 L
.65791 .07123 L
.66018 .07442 L
.66287 .07899 L
.66532 .08399 L
.67033 .09752 L
.67309 .10735 L
.67568 .11861 L
.68031 .14455 L
.68457 .17613 L
Mistroke
.6896 .22083 L
.6918 .24008 L
.6942 .25765 L
.69545 .26442 L
.6966 .26877 L
.69771 .271 L
.69888 .27116 L
.70011 .26889 L
.70127 .26463 L
.70254 .25784 L
.70391 .24852 L
.71299 .17249 L
.7157 .15403 L
.71823 .14001 L
.72087 .12855 L
.72235 .12345 L
.72376 .11948 L
.72496 .11672 L
.72626 .11438 L
.72744 .11285 L
.72853 .11194 L
.72971 .11151 L
.73101 .11174 L
.73167 .11214 L
.73237 .11281 L
.73364 .11465 L
.73433 .116 L
.73497 .11753 L
.73618 .12109 L
.73748 .12607 L
.73888 .13296 L
.74142 .1502 L
.74375 .17268 L
.74901 .24687 L
.75045 .26796 L
.75124 .27784 L
.75199 .28535 L
.75269 .29032 L
.75345 .29314 L
.75414 .29318 L
.75478 .29106 L
.75594 .28218 L
.75703 .26895 L
.75952 .22919 L
.76214 .18623 L
.76455 .15349 L
.76697 .12808 L
.76952 .10819 L
.77208 .09355 L
.77487 .08196 L
Mistroke
.77741 .07431 L
.78016 .0683 L
.78142 .06617 L
.78276 .06429 L
.78391 .06294 L
.78515 .06175 L
.78635 .06085 L
.78745 .06022 L
.78855 .05977 L
.7896 .05952 L
.79081 .05943 L
.79194 .05955 L
.79317 .0599 L
.79449 .06054 L
.79518 .06098 L
.79591 .06155 L
.79721 .06279 L
.79862 .06448 L
.80015 .06679 L
.80291 .07225 L
.80548 .07893 L
.81066 .09593 L
.81293 .1031 L
.81423 .10631 L
.81544 .10841 L
.81661 .1094 L
.81788 .10919 L
.81857 .10851 L
.81923 .1075 L
.82047 .10472 L
.82182 .10061 L
.82307 .09606 L
.82592 .08462 L
.83112 .06547 L
.83339 .05888 L
.83584 .05293 L
.83825 .04814 L
.84046 .04449 L
.84482 .03894 L
.84948 .0347 L
.85441 .03146 L
.85936 .02905 L
.86387 .02736 L
.86874 .02591 L
.87403 .02466 L
.88344 .02299 L
.89236 .02184 L
.90174 .02091 L
.91211 .02012 L
.92306 .01947 L
Mistroke
.93311 .01898 L
.95244 .01826 L
.97329 .01768 L
.97619 .01762 L
Mfstroke
% End of Graphics
MathPictureEnd

%%PSTrailer
end
grestore


%%EPS Trailer

%%Trailer
%%EOF
