%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 106 3 338 146
%%HiResBoundingBox: 106.75 3.1875 337.125 145.5
%%Creator: (Mathematica 4.0 for X)
%%CreationDate: (Monday, March 27, 2000) (11:02:44)
%%Title: Clipboard
%%DocumentNeededResources: font Math1Mono
%%+ font Courier
%%DocumentSuppliedResources:
%%DocumentNeededFonts: Math1Mono
%%+ Courier
%%DocumentSuppliedFonts:
%%DocumentFonts: Math1Mono
%%+ Courier
%%EndComments
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 148.688 translate 1 -1 scale
gsave
150 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
 	     Momatrix
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        9 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        11 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
	      /Momatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/yscale exch def
	/ybias exch def
	/xscale exch def
	/xbias exch def
	/Momatrix
	xscale yscale matrix scale
	xbias ybias matrix translate
	matrix concatmatrix def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabsproc {
        0
        matrix defaultmatrix
        dtransform idtransform
        dup mul exch
        dup mul
        add sqrt
} bind def
/Mabswid {
        Mabsproc
        setlinewidth
} bind def
/Mabsdash {
        exch
        [
        exch
        {
        Mabsproc
        }
        forall
        ]
        exch
        setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse
% Here are the short operators
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def

/MFill {
	0 0 		moveto
	Mwidth 0 	lineto
	Mwidth Mheight 	lineto
	0 Mheight 	lineto
	fill
} bind def

/MPlotRegion {
	3 index
	Mwidth mul
	2 index
	Mheight mul
	translate
	exch sub
	Mheight mul
	/Mheight
	exch def
	exch sub
	Mwidth mul
	/Mwidth
	exch def
} bind def

/Mcharproc
{
  	currentfile
  	(x)
  	readhexstring
  	pop
  	0 get
  	exch
 	div
} bind def

/Mshadeproc
{
	dup
	3 1
	roll
	{
	dup
	Mcharproc
	3 1
	roll
	} repeat
	1 eq
	{
	setgray
	}
	{
	3 eq
	{
	setrgbcolor
	}
	{
	setcmykcolor
	} ifelse
	} ifelse
} bind def

/Mrectproc
{
	3 index
	2 index
	moveto
	2 index
	3 -1
	roll
	lineto
	dup
	3 1
	roll
	lineto
	lineto
	fill
} bind def

/_Mcolorimage
{
	7 1
	roll
	pop
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	9 index
	Mshadeproc
	Mrectproc
	} for
	pop
	} for
	pop pop pop pop
} bind def

/_Mimage
{
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub 
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	Mcharproc
	setgray
	Mrectproc
	} for
	pop
	} for
	pop pop pop
} bind def

/Mimage {
	4 index
	4 index
	mul 1600 gt
	{ image }
	{ _Mimage }
	ifelse
} def

/Mcolorimage {
	6 index
	6 index
	mul 1600 gt
	{ colorimage }
	{ _Mcolorimage }
	ifelse
} def
/Mnodistort true def
1.000000 1.000000 scale
106.750000 145.500000 translate
1.000000 -1.000000 scale
-0.000000 -0.000000 translate
/Mleft		0.000000 def
/Mbottom	0.000000 def
/Mwidth		230.375000 def
/Mheight	142.312500 def
0 setgray
0 setlinewidth
/Courier findfont 12 scalefont setfont
/Mfontsize 12 def
/Plain /Courier findfont def

%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0238095 1.30565 0.0532912 0.192881 [
[.15437 .04079 -9 -9 ]
[.15437 .04079 9 0 ]
[.28494 .04079 -9 -9 ]
[.28494 .04079 9 0 ]
[.41551 .04079 -9 -9 ]
[.41551 .04079 9 0 ]
[.54607 .04079 -9 -9 ]
[.54607 .04079 9 0 ]
[.67664 .04079 -9 -9 ]
[.67664 .04079 9 0 ]
[.8072 .04079 -9 -9 ]
[.8072 .04079 9 0 ]
[.93777 .04079 -9 -9 ]
[.93777 .04079 9 0 ]
[1.025 .05329 0 -4.90625 ]
[1.025 .05329 10 4.90625 ]
[.01131 .14973 -18 -4.5 ]
[.01131 .14973 0 4.5 ]
[.01131 .24617 -6 -4.5 ]
[.01131 .24617 0 4.5 ]
[.01131 .34261 -18 -4.5 ]
[.01131 .34261 0 4.5 ]
[.01131 .43905 -6 -4.5 ]
[.01131 .43905 0 4.5 ]
[.01131 .53549 -18 -4.5 ]
[.01131 .53549 0 4.5 ]
[.02381 .64303 -14 0 ]
[.02381 .64303 14 9.8125 ]
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.15437 .05329 m
.15437 .05954 L
s
[(0.1)] .15437 .04079 0 1 Mshowa
.28494 .05329 m
.28494 .05954 L
s
[(0.2)] .28494 .04079 0 1 Mshowa
.41551 .05329 m
.41551 .05954 L
s
[(0.3)] .41551 .04079 0 1 Mshowa
.54607 .05329 m
.54607 .05954 L
s
[(0.4)] .54607 .04079 0 1 Mshowa
.67664 .05329 m
.67664 .05954 L
s
[(0.5)] .67664 .04079 0 1 Mshowa
.8072 .05329 m
.8072 .05954 L
s
[(0.6)] .8072 .04079 0 1 Mshowa
.93777 .05329 m
.93777 .05954 L
s
[(0.7)] .93777 .04079 0 1 Mshowa
.125 Mabswid
.04992 .05329 m
.04992 .05704 L
s
.07604 .05329 m
.07604 .05704 L
s
.10215 .05329 m
.10215 .05704 L
s
.12826 .05329 m
.12826 .05704 L
s
.18049 .05329 m
.18049 .05704 L
s
.2066 .05329 m
.2066 .05704 L
s
.23271 .05329 m
.23271 .05704 L
s
.25883 .05329 m
.25883 .05704 L
s
.31105 .05329 m
.31105 .05704 L
s
.33717 .05329 m
.33717 .05704 L
s
.36328 .05329 m
.36328 .05704 L
s
.38939 .05329 m
.38939 .05704 L
s
.44162 .05329 m
.44162 .05704 L
s
.46773 .05329 m
.46773 .05704 L
s
.49384 .05329 m
.49384 .05704 L
s
.51996 .05329 m
.51996 .05704 L
s
.57218 .05329 m
.57218 .05704 L
s
.5983 .05329 m
.5983 .05704 L
s
.62441 .05329 m
.62441 .05704 L
s
.65052 .05329 m
.65052 .05704 L
s
.70275 .05329 m
.70275 .05704 L
s
.72886 .05329 m
.72886 .05704 L
s
.75498 .05329 m
.75498 .05704 L
s
.78109 .05329 m
.78109 .05704 L
s
.83331 .05329 m
.83331 .05704 L
s
.85943 .05329 m
.85943 .05704 L
s
.88554 .05329 m
.88554 .05704 L
s
.91165 .05329 m
.91165 .05704 L
s
.96388 .05329 m
.96388 .05704 L
s
.98999 .05329 m
.98999 .05704 L
s
.25 Mabswid
0 .05329 m
1 .05329 L
s
gsave
1.025 .05329 -61 -8.90625 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 17.8125 translate 1 -1 scale
63.000 11.250 moveto
%%IncludeResource: font Math1Mono
%%IncludeFont: Math1Mono
/Math1Mono findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(q) show
1.000 setlinewidth
grestore
.02381 .14973 m
.03006 .14973 L
s
[(0.5)] .01131 .14973 1 0 Mshowa
.02381 .24617 m
.03006 .24617 L
s
[(1)] .01131 .24617 1 0 Mshowa
.02381 .34261 m
.03006 .34261 L
s
[(1.5)] .01131 .34261 1 0 Mshowa
.02381 .43905 m
.03006 .43905 L
s
[(2)] .01131 .43905 1 0 Mshowa
.02381 .53549 m
.03006 .53549 L
s
[(2.5)] .01131 .53549 1 0 Mshowa
.125 Mabswid
.02381 .07258 m
.02756 .07258 L
s
.02381 .09187 m
.02756 .09187 L
s
.02381 .11116 m
.02756 .11116 L
s
.02381 .13044 m
.02756 .13044 L
s
.02381 .16902 m
.02756 .16902 L
s
.02381 .18831 m
.02756 .18831 L
s
.02381 .2076 m
.02756 .2076 L
s
.02381 .22688 m
.02756 .22688 L
s
.02381 .26546 m
.02756 .26546 L
s
.02381 .28475 m
.02756 .28475 L
s
.02381 .30404 m
.02756 .30404 L
s
.02381 .32332 m
.02756 .32332 L
s
.02381 .3619 m
.02756 .3619 L
s
.02381 .38119 m
.02756 .38119 L
s
.02381 .40048 m
.02756 .40048 L
s
.02381 .41976 m
.02756 .41976 L
s
.02381 .45834 m
.02756 .45834 L
s
.02381 .47763 m
.02756 .47763 L
s
.02381 .49692 m
.02756 .49692 L
s
.02381 .5162 m
.02756 .5162 L
s
.02381 .034 m
.02756 .034 L
s
.02381 .01472 m
.02756 .01472 L
s
.02381 .55478 m
.02756 .55478 L
s
.02381 .57407 m
.02756 .57407 L
s
.02381 .59336 m
.02756 .59336 L
s
.02381 .61264 m
.02756 .61264 L
s
.25 Mabswid
.02381 0 m
.02381 .61803 L
s
gsave
.02381 .64303 -75 -4 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 17.8125 translate 1 -1 scale
63.000 11.250 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(coef) show
1.000 setlinewidth
grestore
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
.5 Mabswid
.02381 .09187 m
.02634 .09187 L
.02864 .09187 L
.0313 .09187 L
.03382 .09187 L
.03829 .09187 L
.04314 .09188 L
.04848 .09189 L
.05415 .0919 L
.06431 .09192 L
.0748 .09196 L
.08463 .09199 L
.10701 .0921 L
.12984 .09225 L
.15072 .09242 L
.19775 .09292 L
.23863 .09349 L
.28326 .09427 L
.37078 .09634 L
.45505 .09916 L
.54459 .10333 L
.58953 .10603 L
.63088 .10898 L
.71389 .11673 L
.75443 .12178 L
.79893 .12876 L
.84094 .13739 L
.88598 .15031 L
.90789 .15893 L
.91944 .16448 L
.93172 .17148 L
.94242 .17893 L
.9481 .18362 L
.95423 .1895 L
.95983 .19595 L
.96497 .20328 L
.96988 .21259 L
.97235 .21895 L
.97505 .2293 L
s
.02381 .01472 m
.02634 .01472 L
.02864 .01472 L
.0313 .01472 L
.03382 .01472 L
.03829 .01472 L
.04314 .01473 L
.04848 .01474 L
.05415 .01475 L
.06431 .01477 L
.0748 .0148 L
.08463 .01484 L
.10701 .01495 L
.12984 .0151 L
.15072 .01527 L
.19775 .01577 L
.23863 .01634 L
.28326 .01713 L
.32916 .01813 L
.37078 .01923 L
.45505 .02213 L
.54133 .02628 L
.62435 .03194 L
.66729 .0358 L
.71265 .04084 L
.75494 .04678 L
.79442 .05387 L
.81692 .05885 L
.83824 .06443 L
.87821 .0782 L
.89899 .08805 L
.91039 .09469 L
.92108 .10204 L
.93993 .11912 L
.94995 .13176 L
.95517 .14006 L
.96075 .15097 L
.96362 .15784 L
.96634 .16547 L
.96899 .17448 L
.97142 .18501 L
.97374 .19877 L
.97619 .2271 L
s
.02381 .28475 m
.02634 .28475 L
.02864 .28475 L
.0313 .28475 L
.03382 .28475 L
.03829 .28476 L
.04314 .28476 L
.04848 .28477 L
.05415 .28478 L
.06431 .2848 L
.0748 .28484 L
.08463 .28487 L
.10701 .28498 L
.12984 .28513 L
.15072 .2853 L
.19775 .2858 L
.23863 .28637 L
.28326 .28715 L
.37078 .28922 L
.45505 .29204 L
.54459 .29621 L
.58953 .29891 L
.63088 .30186 L
.71389 .30962 L
.75443 .31467 L
.79893 .32165 L
.84094 .33028 L
.88598 .34319 L
.90789 .35181 L
.91944 .35736 L
.93172 .36436 L
.94242 .37181 L
.9481 .3765 L
.95423 .38238 L
.95983 .38883 L
.96497 .39616 L
.96988 .40547 L
.97235 .41183 L
.97505 .42218 L
s
.02381 .28475 m
.02634 .28475 L
.02864 .28475 L
.0313 .28475 L
.03382 .28475 L
.03829 .28476 L
.04314 .28477 L
.04848 .28478 L
.05415 .28479 L
.06431 .28483 L
.0748 .28488 L
.08463 .28494 L
.10701 .2851 L
.12984 .28533 L
.15072 .28558 L
.19775 .28633 L
.23863 .28719 L
.28326 .28837 L
.32916 .28988 L
.37078 .29153 L
.45505 .29586 L
.54133 .3021 L
.62435 .31059 L
.66729 .31637 L
.71265 .32393 L
.75494 .33284 L
.79442 .34348 L
.81692 .35096 L
.83824 .35932 L
.87821 .37998 L
.89899 .39475 L
.91039 .4047 L
.92108 .41574 L
.93993 .44135 L
.94995 .46032 L
.95517 .47276 L
.96075 .48914 L
.96362 .49944 L
.96634 .51088 L
.96899 .5244 L
.97142 .54019 L
.97374 .56083 L
.97619 .60332 L
s
% End of Graphics
MathPictureEnd

%%PSTrailer
end
grestore


%%EPS Trailer

%%Trailer
%%EOF
