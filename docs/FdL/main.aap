####################
## preparatory work: set variables, obtain document metadata
####################

#TODO: 
# allow pynd-metadata extraction
# allow passing of pageranges to dvipdfm through commandline


@import os
@import yaml 	# Parsing the yaml file requires PyYaml 0.32.
@from Cheetah.Template import Template # Filling the metadata requires Cheetah 0.9.15

#this has to come from commandline, configfile, best guess or else env. var.
basedir   = /home/alv/edita
datadir   = $(basedir)/aux
edita     = file:/home/alv/edita
:python
	mdfiles = glob('*.yml')
	mdfiles.sort() 
	mdfile = mdfiles[-1]  #the most recent metadata file
	print 'AQ> reading metadata file ' + mdfile
	md    = yaml.loadFile(mdfile).next()
	ext   = md['sourceformat']['ext']
	ver   = md['releases'][-1]['number']
	encver = ver.replace('.','_')
	short = md['shorttitle']
	shortv = '-'.join([md['shorttitle'],encver])
	print 'AQ> working to compile ' +  shortv
	units = md['bodyunits'] + md['appendixes']
	basenames =  [unit['basename'] for unit in units]
	def files(type): return ' '.join([basename + type  for basename in basenames]) 
	htmlfiles, htmlrawfiles = files('.html'), files('.html-raw')
	dvifiles, psfiles, pdffiles = files('.dvi'), files('.ps'), files('.pdf')
	auxfiles, texfiles, texbodies =  files('.aux'), files('.tex'), files('-body.tex')
	srcfiles = files('.' + ext)


:child fig/main.aap

:include latex.aap {fetch = $edita/latex.aap}

