%!PS-Adobe-2.0 EPSF-2.0
%%Title: circuito-amortiguado.eps
%%Creator: gnuplot 3.7 patchlevel 3
%%CreationDate: Sat Jan 10 00:00:05 2004
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
798 420 M
63 0 V
6101 0 R
-63 0 V
714 420 M
(-0.15) Rshow
798 825 M
63 0 V
6101 0 R
-63 0 V
714 825 M
(-0.1) Rshow
798 1229 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
(-0.05) Rshow
798 1634 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
( 0) Rshow
798 2039 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
( 0.05) Rshow
798 2444 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
( 0.1) Rshow
798 2848 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
( 0.15) Rshow
798 3253 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
( 0.2) Rshow
798 3658 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
( 0.25) Rshow
798 4063 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
( 0.3) Rshow
798 4467 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
( 0.35) Rshow
798 4872 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
( 0.4) Rshow
798 420 M
0 63 V
0 4389 R
0 -63 V
798 280 M
( 0) Cshow
2339 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 5) Cshow
3880 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 10) Cshow
5421 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 15) Cshow
6962 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 20) Cshow
1.000 UL
LTb
798 420 M
6164 0 V
0 4452 V
-6164 0 V
798 420 L
140 2646 M
currentpoint gsave translate 90 rotate 0 0 M
(I\(tau\)) Cshow
grestore
3880 70 M
(tau) Cshow
1.000 UL
LT0
6311 4739 M
(alfa=sqrt\(2\), I0=1) Rshow
6395 4739 M
399 0 V
798 1634 M
62 1237 V
63 661 V
62 314 V
62 109 V
62 -11 V
63 -77 V
62 -113 V
62 -129 V
62 -135 V
63 -134 V
62 -129 V
62 -122 V
62 -114 V
63 -107 V
62 -99 V
62 -92 V
62 -84 V
63 -78 V
62 -72 V
62 -66 V
63 -61 V
62 -56 V
62 -51 V
62 -48 V
63 -43 V
62 -40 V
62 -37 V
62 -34 V
63 -31 V
62 -29 V
62 -26 V
62 -25 V
63 -22 V
62 -21 V
62 -18 V
62 -18 V
63 -16 V
62 -14 V
62 -14 V
63 -12 V
62 -12 V
62 -10 V
62 -10 V
63 -9 V
62 -8 V
62 -8 V
62 -7 V
63 -6 V
62 -6 V
62 -5 V
62 -5 V
63 -5 V
62 -4 V
62 -4 V
62 -3 V
63 -3 V
62 -3 V
62 -3 V
62 -3 V
63 -2 V
62 -2 V
62 -2 V
63 -2 V
62 -2 V
62 -1 V
62 -2 V
63 -1 V
62 -1 V
62 -1 V
62 -1 V
63 -1 V
62 -1 V
62 -1 V
62 -1 V
63 0 V
62 -1 V
62 0 V
62 -1 V
63 0 V
62 -1 V
62 0 V
63 -1 V
62 0 V
62 0 V
62 -1 V
63 0 V
62 0 V
62 0 V
62 0 V
63 -1 V
62 0 V
62 0 V
62 0 V
63 0 V
62 0 V
62 -1 V
62 0 V
63 0 V
62 0 V
1.000 UL
LT1
6311 4599 M
(alfa=0.3, I0=0.5) Rshow
6395 4599 M
399 0 V
798 1634 M
62 730 V
63 618 V
62 496 V
62 369 V
62 242 V
63 120 V
62 8 V
62 -92 V
62 -176 V
63 -246 V
62 -296 V
62 -331 V
62 -348 V
63 -350 V
62 -339 V
62 -316 V
62 -283 V
63 -243 V
62 -199 V
62 -151 V
63 -105 V
62 -58 V
62 -15 V
62 24 V
63 57 V
62 84 V
62 105 V
62 120 V
63 128 V
62 131 V
62 128 V
62 121 V
63 109 V
62 95 V
62 79 V
62 62 V
63 44 V
62 27 V
62 10 V
63 -4 V
62 -18 V
62 -28 V
62 -38 V
63 -43 V
62 -47 V
62 -49 V
62 -48 V
63 -46 V
62 -42 V
62 -37 V
62 -31 V
63 -25 V
62 -18 V
62 -12 V
62 -6 V
63 0 V
62 5 V
62 10 V
62 13 V
63 15 V
62 17 V
62 18 V
63 18 V
62 18 V
62 16 V
62 14 V
63 13 V
62 10 V
62 7 V
62 6 V
63 2 V
62 1 V
62 -1 V
62 -4 V
63 -4 V
62 -6 V
62 -6 V
62 -6 V
63 -7 V
62 -7 V
62 -6 V
63 -5 V
62 -5 V
62 -4 V
62 -3 V
63 -3 V
62 -1 V
62 0 V
62 0 V
63 1 V
62 1 V
62 2 V
62 3 V
63 2 V
62 3 V
62 2 V
62 2 V
63 3 V
62 1 V
1.000 UL
LT2
6311 4459 M
(alfa=1) Rshow
6395 4459 M
399 0 V
798 1634 M
62 1336 V
63 848 V
62 492 V
62 240 V
62 62 V
63 -58 V
62 -137 V
62 -184 V
62 -210 V
63 -220 V
62 -220 V
62 -211 V
62 -200 V
63 -184 V
62 -169 V
62 -152 V
62 -136 V
63 -121 V
62 -107 V
62 -94 V
63 -81 V
62 -71 V
62 -62 V
62 -53 V
63 -46 V
62 -39 V
62 -34 V
62 -29 V
63 -24 V
62 -21 V
62 -18 V
62 -15 V
63 -13 V
62 -11 V
62 -9 V
62 -8 V
63 -6 V
62 -6 V
62 -5 V
63 -4 V
62 -3 V
62 -3 V
62 -2 V
63 -2 V
62 -2 V
62 -1 V
62 -1 V
63 -1 V
62 -1 V
62 0 V
62 -1 V
63 0 V
62 -1 V
62 0 V
62 0 V
63 -1 V
62 0 V
62 0 V
62 0 V
63 0 V
62 0 V
62 0 V
63 -1 V
62 0 V
62 0 V
62 0 V
63 0 V
62 0 V
62 0 V
62 0 V
63 0 V
62 0 V
62 0 V
62 0 V
63 0 V
62 0 V
62 0 V
62 0 V
63 0 V
62 0 V
62 0 V
63 0 V
62 0 V
62 0 V
62 0 V
63 0 V
62 0 V
62 0 V
62 0 V
63 0 V
62 0 V
62 0 V
62 0 V
63 0 V
62 0 V
62 0 V
62 0 V
63 0 V
62 0 V
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
