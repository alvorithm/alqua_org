%!PS-Adobe-3.0 EPSF-3.0
%%For: ,,,
%%CreationDate: Mon Apr 12 12:00:47 2004
%%Title: stern-gerlach-src.sk
%%Creator: Sketch 0.6.15
%%Pages: 1
%%BoundingBox: 57 512 445 728
%%Extensions: CMYK
%%DocumentSuppliedResources: (atend)
%%EndComments

%%BeginProlog
%%BeginResource: procset Linux-Sketch-Procset 1.0 2
/SketchDict 100 dict def
SketchDict begin
/bd { bind def } bind def
/x { exch } bd
/xd { exch def } bd
/PI 3.14159265358979323846264338327 def
/radgrad { 180 mul PI div } bd
/skstartmatrix matrix currentmatrix def
/tmpmat matrix def
/ISOLatin1Encoding dup where
{ pop pop }
{  [/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /space /exclam /quotedbl /numbersign /dollar /percent /ampersand
/quoteright /parenleft /parenright /asterisk /plus /comma /minus /period
/slash /zero /one /two /three /four /five /six /seven /eight /nine /colon
/semicolon /less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J
/K /L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /quoteleft /a /b /c /d /e /f /g /h /i
/j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar /braceright
/asciitilde /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /dotlessi /grave /acute /circumflex /tilde /macron /breve
/dotaccent /dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek
/caron /space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen
/registered /macron /degree /plusminus /twosuperior /threesuperior /acute /mu
/paragraph /periodcentered /cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown /Agrave /Aacute /Acircumflex
/Atilde /Adieresis /Aring /AE /Ccedilla /Egrave /Eacute /Ecircumflex
/Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth /Ntilde /Ograve
/Oacute /Ocircumflex /Otilde /Odieresis /multiply /Oslash /Ugrave /Uacute
/Ucircumflex /Udieresis /Yacute /Thorn /germandbls /agrave /aacute
/acircumflex /atilde /adieresis /aring /ae /ccedilla /egrave /eacute
/ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis /eth /ntilde
/ograve /oacute /ocircumflex /otilde /odieresis /divide /oslash /ugrave
/uacute /ucircumflex /udieresis /yacute /thorn /ydieresis] def
}
ifelse
/arct dup where
{pop pop}
{
/arct {arcto pop pop pop pop} bd
}
ifelse
/size 0 def
/fontname 0 def
/newfont 0 def
/sf {
/size xd
/fontname xd
fontname findfont
dup /Encoding get StandardEncoding eq
{
dup
length dict /newfont xd
{
1 index
/FID ne
{ newfont 3 1 roll put }
{ pop pop }
ifelse
} forall
newfont /Encoding ISOLatin1Encoding put
fontname newfont definefont
}
if
size scalefont setfont
} bd
/pusht {matrix currentmatrix} bd
/popt {setmatrix} bd
/pushc {gsave} bd
/popc {grestore} bd
/rgb {setrgbcolor} bd
/w { setlinewidth } bd
/j { setlinejoin } bd
/J { setlinecap } bd
/d { setdash } bd
/F { eofill } bd
/f { closepath F } bd
/S {
pusht
skstartmatrix setmatrix stroke 
popt
} bd
/s { closepath S } bd
/m { moveto } bd
/l { lineto } bd
/c { curveto } bd
/txt {
/tmpmat tmpmat currentmatrix def
dup type /arraytype eq {concat} {translate} ifelse
0 0 m
tmpmat
} bd
/T {txt x show popt} bd
/P {txt x true charpath popt} bd
/TP {txt x dup show 0 0 m true charpath popt} bd
/C {newpath 0 360 arc} bd
/R {
2 copy m
x 2 index l
x 2 index x l
l
closepath
} bd
/ellipse { 
dup type /arraytype eq
{
pusht x concat
0 0 1.0 C 
popt
}	
{
pusht 5 1 roll
4 -1 roll concat
newpath
dup 2 eq {
0 0 m 
} if 
3 1 roll
radgrad x
radgrad x
0 0 1   5 -2 roll
arc
0 ne { closepath } if
popt
}
ifelse
} bd
/radius1 0 def
/radius2 0 def
/factor 0 def
/rect {
dup type /arraytype eq
{
pusht x concat
0 0 m  1 0 l  1 1 l  0 1 l  closepath
popt
}
{
/radius2 xd
/radius1 xd
pusht x concat
radius1 radius2 div  1  scale
0 radius2 m
0 1  radius2 1  radius2  arct
radius2 radius1 div
dup 1  1 index 0  radius2  arct
0  0 0  radius2  arct
0 0  0 1  radius2 arct
closepath
popt
}
ifelse
} bd
/buf 0 def
/width 0 def
/height 0 def
/skcimg {
/tmpmat tmpmat currentmatrix def
{ concat } if
/height xd
/width xd
/buf width 3 mul string def
width height scale
width height 8
[width	 0   0	 height neg	  0  height]
{ currentfile buf readhexstring pop } bind
false 3 colorimage
tmpmat setmatrix
} bd
/skgimg {
/tmpmat tmpmat currentmatrix def
{ concat } if
/height xd
/width xd
/buf width string def
width height scale
width height 8
[width	 0   0	 height neg	  0  height]
{ currentfile buf readhexstring pop } bind
image
tmpmat setmatrix
} bd
/rclip {
4 2 roll m
dup 0 x rlineto
x 0 rlineto
neg 0 x rlineto
closepath
clip
} bd
/skeps {
10 dict begin
/sk_state save def
concat
3 index neg 3 index neg translate
rclip
0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
10 setmiterlimit [ ] 0 setdash
newpath
/sk_dict_count countdictstack def
/sk_count count 1 sub def
userdict begin
/showpage { } def
/languagelevel where
{
pop
languagelevel 1 ne
{
false setstrokeadjust
false setoverprint
} if
} if
} bd 
/skepsend {
count sk_count sub { pop } repeat
countdictstack sk_dict_count sub { end } repeat
sk_state restore
end
} bd
/gradidx 0 def
/gradient { 
3 mul array
/gradidx 0 def
} bd
/$ {
3 index gradidx       5 -1 roll put 
2 index gradidx 1 add 4 -1 roll put 
1 index gradidx 2 add 3 -1 roll put 
/gradidx gradidx 3 add def
} bd
/! { 
3 
{
dup dup gradidx dup 3 1 roll 3 sub get put
/gradidx gradidx 1 add def
}
repeat
} bd
/gradcolor {
3 mul dup 2 add 1 exch	% idx  1  idx+2
{
1 index exch	% array array i
get		% array component
exch		% component array
}
for
4 1 roll
} bd
/x0 0 def /y0 0 def /x1 0 def /y1 0 def
/left 0 def /right 0 def /top 0 def /bottom 0 def
/numcolors 0 def
/axial	{
/y1 xd /x1 xd /y0 xd /x0 xd
dup length 3 idiv /numcolors xd
pusht exch  % ctm array
x0 x1 ne y0 y1 ne or
{
x0 y0 translate
[x1 x0 sub  y1 y0 sub	dup neg    2 index    0	    0] concat
clippath flattenpath pathbbox
/top xd /right xd /bottom xd /left xd
newpath
0 gradcolor rgb clippath f
0 1 numcolors 1 sub
{
dup numcolors div
3 1 roll
gradcolor rgb
exch
bottom right top R f
}
for
}
if 
pop
popt
} bd
/r0 0 def /r1 0 def /dr 0 def
/radial	{
/r1 xd /r0 xd /y0 xd /x0 xd
/dr r1 r0 sub def
dup length 3 idiv /numcolors xd
pusht exch  % ctm array
r0 r1 ne
{
x0 y0 translate
clippath flattenpath pathbbox
/top xd /right xd /bottom xd /left xd
newpath
dr 0 gt {numcolors 1 sub}{0} ifelse gradcolor rgb
clippath f
dr 0 gt {numcolors 1 sub -1 0} { 0 1 numcolors 1 sub} ifelse
{
dup numcolors div dr mul r0 add
3 1 roll
gradcolor rgb
exch
0 0 3 -1 roll C f
}
for
}
if 
pop
popt
} bd
/max {
2 copy lt {exch} if pop
} bd
/conical {
pusht 5 1 roll
3 1 roll /y0 xd /x0 xd
x0 y0 translate
radgrad rotate
dup length 3 idiv /numcolors xd
clippath flattenpath pathbbox newpath
4 { abs 4 1 roll} repeat
3 { max } repeat
2 mul
dup scale
0 gradcolor rgb
0 0 1 0 360 arc f
1 1 numcolors 1 sub
{
dup numcolors div 180 mul
3 1 roll
gradcolor rgb
exch
0 0 moveto
0 0 1  4 -1 roll  dup neg  arc
closepath f
}
for
pop
popt
} bd
/XStep 0 def /YStep 0 def /imagedata 0 def /components 0 def
/tileimage2 {
exch 4 2 roll
/height xd
/width xd
mark
/components 2 index
/PatternType 1
/PaintType 1
/TilingType 1
/BBox [0 0 width height]
/XStep width
/YStep height
/PaintProc {
begin
XStep YStep 8
matrix
imagedata
false
components
colorimage
end
}
counttomark 2 div cvi dup dict begin
{ def } repeat
pop currentdict end
dup
/imagedata
4 -1 roll
width height mul mul string
currentfile exch readhexstring pop
put
exch
makepattern
setpattern
clippath
eofill
} bd
/tileimage1 {
concat
/components xd
/height xd
/width xd
/imagedata
currentfile
width height mul components mul string
readhexstring pop
def
clippath flattenpath pathbbox
/top xd /right xd /bottom xd /left xd
left width div floor width mul
bottom height div floor height mul
translate
top bottom sub height div ceiling cvi
{
gsave
right left sub width div ceiling cvi
{
width height 8 matrix
components 1 eq
{
{ imagedata }
image
}
{
imagedata
false components
colorimage
}
ifelse
width 0 translate
}
repeat
grestore
0 height translate
}
repeat
} bd
/makepattern where
{
pop
/tileimage /tileimage2 load def
}
{
/tileimage /tileimage1 load def
}
ifelse
end
%%EndResource
%%EndProlog

%%BeginSetup

10.433 setmiterlimit
%%EndSetup

%%Page: 1 1
SketchDict begin
newpath
112.899 609.106 m
429.803 609.106 l
0 0 0 rgb
0.85323 w
0 j
0 J
[] 0 d
S
newpath
425.198 612.504 m
430.44 609.106 l
425.198 605.706 l
1.008 w
[] 0 d
S
newpath
136.27 518.963 m
136.27 721.24 l
0.85323 w
[] 0 d
S
newpath
132.872 716.635 m
136.27 721.877 l
139.671 716.635 l
1.008 w
[] 0 d
S
newpath
158.527 564.591 m
158.527 652.241 l
0.85323 w
[] 0 d
S
newpath
155.13 647.636 m
158.527 652.878 l
161.928 647.636 l
1.008 w
[] 0 d
S
newpath
136.27 609.106 m
76.083 554.391 l
0.85323 w
[] 0 d
S
newpath
81.7756 554.974 m
75.6116 553.962 l
77.2026 560.005 l
1.008 w
[] 0 d
S
newpath
204.156 700.363 m
226.413 676.992 l
363.298 676.992 l
385.555 700.363 l
1.13669 w
[] 0 d
S
newpath
204.156 518.963 m
227.526 541.22 l
363.298 541.22 l
385.555 518.963 l
S
newpath
293.186 626.912 m
283.379 626.912 275.38 618.914 275.38 609.106 c
275.38 599.299 283.379 591.3 293.186 591.3 c
302.993 591.3 310.992 599.299 310.992 609.106 c
310.992 618.914 302.993 626.912 293.186 626.912 c
closepath
[2.27338 3.41007 ] 0 d
S
newpath
294.299 566.817 m
271.007 566.817 252.01 585.814 252.01 609.106 c
252.01 632.399 271.007 651.396 294.299 651.396 c
317.591 651.396 336.589 632.399 336.589 609.106 c
336.589 585.814 317.591 566.817 294.299 566.817 c
closepath
S
newpath
114.313 724.311 m
107.351 714.357 l
111.695 714.357 l
112.361 714.357 112.873 714.503 113.231 714.795 c
113.587 715.087 113.903 715.677 114.179 716.569 c
114.437 716.521 l
113.937 713.717 l
105.313 713.717 l
105.313 714.007 l
112.109 723.677 l
108.719 723.677 l
108.155 723.677 107.749 723.617 107.495 723.495 c
107.243 723.371 107.051 723.195 106.917 722.963 c
106.785 722.731 106.663 722.297 106.555 721.663 c
106.257 721.663 l
106.477 724.311 l
114.313 724.311 l
closepath
F
newpath
64.8999 569.346 m
67.1716 565.954 l
67.8018 565.018 68.2698 564.424 68.5757 564.178 c
68.8799 563.93 69.2656 563.794 69.7356 563.768 c
69.7356 563.478 l
65.1877 563.478 l
65.1877 563.768 l
65.49 563.772 65.7139 563.804 65.8599 563.86 c
65.97 563.908 66.0598 563.98 66.1296 564.076 c
66.1997 564.172 66.2358 564.27 66.2358 564.368 c
66.2358 564.488 66.2119 564.608 66.1638 564.728 c
66.1277 564.816 65.9858 565.046 65.7358 565.416 c
63.938 568.134 l
61.72 565.29 l
61.4861 564.988 61.344 564.786 61.2979 564.686 c
61.25 564.584 61.2278 564.478 61.2278 564.368 c
61.2278 564.202 61.2979 564.064 61.438 563.954 c
61.5779 563.846 61.8481 563.782 62.2441 563.768 c
62.2441 563.478 l
58.4858 563.478 l
58.4858 563.768 l
58.7502 563.794 58.98 563.848 59.1719 563.932 c
59.4958 564.066 59.802 564.248 60.094 564.478 c
60.386 564.708 60.72 565.058 61.094 565.532 c
63.594 568.688 l
61.5078 571.744 l
60.9399 572.572 60.46 573.114 60.064 573.372 c
59.668 573.63 59.2119 573.768 58.696 573.782 c
58.696 574.072 l
63.594 574.072 l
63.594 573.782 l
63.1777 573.768 62.8921 573.7 62.7397 573.58 c
62.5859 573.46 62.5081 573.326 62.5081 573.182 c
62.5081 572.988 62.6338 572.708 62.8838 572.338 c
64.5078 569.908 l
66.3918 572.29 l
66.6099 572.572 66.7437 572.764 66.7939 572.868 c
66.8438 572.972 66.8679 573.08 66.8679 573.188 c
66.8679 573.298 66.8359 573.394 66.7737 573.478 c
66.6958 573.588 66.5977 573.664 66.4778 573.708 c
66.3579 573.752 66.1099 573.778 65.7358 573.782 c
65.7358 574.072 l
69.4939 574.072 l
69.4939 573.782 l
69.1956 573.768 68.9539 573.72 68.7659 573.642 c
68.4858 573.522 68.228 573.36 67.9939 573.158 c
67.7581 572.954 67.4277 572.58 67 572.032 c
64.8999 569.346 l
closepath
F
newpath
441.035 605.233 m
444.729 605.233 l
444.729 604.943 l
444.527 604.943 l
444.391 604.943 444.193 604.883 443.933 604.765 c
443.673 604.645 443.435 604.473 443.221 604.249 c
443.007 604.024 442.745 603.658 442.433 603.155 c
439.877 599.131 l
439.877 596.475 l
439.877 595.823 439.951 595.417 440.097 595.257 c
440.295 595.037 440.607 594.929 441.035 594.929 c
441.377 594.929 l
441.377 594.639 l
436.877 594.639 l
436.877 594.929 l
437.253 594.929 l
437.701 594.929 438.019 595.063 438.205 595.335 c
438.321 595.501 438.377 595.881 438.377 596.475 c
438.377 598.983 l
435.471 603.421 l
435.127 603.94 434.895 604.267 434.773 604.397 c
434.649 604.526 434.395 604.683 434.011 604.865 c
433.907 604.917 433.755 604.943 433.557 604.943 c
433.557 605.233 l
438.089 605.233 l
438.089 604.943 l
437.855 604.943 l
437.609 604.943 437.385 604.886 437.179 604.771 c
436.973 604.656 436.869 604.484 436.869 604.257 c
436.869 604.069 437.029 603.73 437.347 603.241 c
439.557 599.827 l
441.635 603.093 l
441.949 603.581 442.105 603.947 442.105 604.185 c
442.105 604.331 442.067 604.461 441.991 604.577 c
441.915 604.691 441.807 604.781 441.667 604.846 c
441.527 604.911 441.315 604.943 441.035 604.943 c
441.035 605.233 l
closepath
F
newpath
164.804 669.043 m
165.54 668.887 166.088 668.637 166.454 668.293 c
166.958 667.815 167.21 667.229 167.21 666.535 c
167.21 666.01 167.044 665.506 166.71 665.023 c
166.378 664.542 165.92 664.191 165.34 663.969 c
164.76 663.748 163.872 663.638 162.68 663.638 c
157.68 663.638 l
157.68 663.927 l
158.078 663.927 l
158.521 663.927 158.839 664.068 159.032 664.348 c
159.15 664.531 159.21 664.92 159.21 665.513 c
159.21 672.355 l
159.21 673.013 159.136 673.427 158.985 673.597 c
158.782 673.827 158.48 673.941 158.078 673.941 c
157.68 673.941 l
157.68 674.231 l
162.258 674.231 l
163.112 674.231 163.796 674.169 164.312 674.043 c
165.094 673.855 165.69 673.523 166.102 673.047 c
166.512 672.571 166.718 672.023 166.718 671.404 c
166.718 670.872 166.558 670.397 166.234 669.978 c
165.912 669.557 165.434 669.248 164.804 669.043 c
160.71 669.466 m
160.904 669.429 161.124 669.401 161.372 669.383 c
161.618 669.365 161.89 669.355 162.188 669.355 c
162.948 669.355 163.52 669.438 163.902 669.602 c
164.286 669.765 164.578 670.017 164.782 670.355 c
164.984 670.696 165.086 671.065 165.086 671.465 c
165.086 672.085 164.834 672.613 164.328 673.051 c
163.822 673.489 163.086 673.707 162.118 673.707 c
161.596 673.707 161.128 673.651 160.71 673.535 c
160.71 669.466 l
closepath
160.71 664.404 m
161.316 664.263 161.912 664.191 162.5 664.191 c
163.442 664.191 164.162 664.404 164.656 664.83 c
165.15 665.254 165.398 665.777 165.398 666.404 c
165.398 666.815 165.286 667.209 165.062 667.592 c
164.838 667.971 164.474 668.27 163.968 668.49 c
163.464 668.708 162.838 668.818 162.094 668.818 c
161.77 668.818 161.494 668.812 161.266 668.801 c
161.036 668.792 160.852 668.774 160.71 668.748 c
160.71 664.404 l
closepath
F
newpath
336.067 629.146 m
336.061 628.084 336.319 627.252 336.839 626.646 c
337.361 626.043 337.972 625.74 338.675 625.74 c
339.145 625.74 339.551 625.871 339.899 626.129 c
340.244 626.386 340.534 626.826 340.769 627.453 c
341.01 627.296 l
340.902 626.583 340.585 625.933 340.059 625.346 c
339.532 624.761 338.873 624.469 338.081 624.469 c
337.222 624.469 336.487 624.802 335.875 625.473 c
335.263 626.141 334.957 627.041 334.957 628.171 c
334.957 629.395 335.271 630.348 335.899 631.034 c
336.525 631.719 337.313 632.062 338.26 632.062 c
339.062 632.062 339.723 631.796 340.239 631.269 c
340.752 630.74 341.01 630.032 341.01 629.146 c
336.067 629.146 l
closepath
336.067 629.6 m
339.378 629.6 l
339.353 630.059 339.297 630.383 339.215 630.568 c
339.084 630.86 338.891 631.091 338.632 631.256 c
338.375 631.423 338.105 631.506 337.823 631.506 c
337.391 631.506 337.005 631.339 336.663 631.002 c
336.323 630.667 336.123 630.2 336.067 629.6 c
F
[3.16572 0 0 0.295044 342.888 634.777] rect
0 w
[] 0 d
S
newpath
296.93 620.714 m
296.93 619.582 l
295.038 619.582 l
294.856 618.388 294.766 617.246 294.766 616.152 c
294.766 615.616 294.86 615.232 295.046 615 c
295.234 614.768 295.468 614.652 295.75 614.652 c
295.974 614.652 296.168 614.73 296.336 614.886 c
296.502 615.042 296.61 615.268 296.656 615.566 c
296.93 615.566 l
296.84 614.742 296.645 614.162 296.34 613.824 c
296.034 613.486 295.692 613.316 295.312 613.316 c
294.906 613.316 294.568 613.5 294.296 613.87 c
294.026 614.24 293.89 614.93 293.89 615.94 c
293.89 616.576 293.99 617.79 294.188 619.582 c
292.156 619.582 l
291.994 616.852 291.8 615.126 291.571 614.402 c
291.34 613.678 291.027 613.316 290.624 613.316 c
290.438 613.316 290.282 613.378 290.161 613.504 c
290.038 613.628 289.976 613.784 289.976 613.972 c
289.976 614.108 289.999 614.224 290.038 614.324 c
290.096 614.46 290.219 614.65 290.406 614.894 c
290.724 615.316 290.944 615.758 291.071 616.222 c
291.294 617.014 291.44 618.134 291.509 619.582 c
291.148 619.582 l
290.768 619.582 290.485 619.518 290.296 619.394 c
289.994 619.206 289.719 618.894 289.468 618.456 c
289.165 618.456 l
289.457 619.358 289.796 619.98 290.188 620.324 c
290.485 620.584 290.9 620.714 291.438 620.714 c
296.93 620.714 l
closepath
F
%%PageTrailer
showpage
%%Trailer
end
%%DocumentSuppliedResources: procset Linux-Sketch-Procset 1.0 2
%%EOF
