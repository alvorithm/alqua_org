%!PS-Adobe-2.0 EPSF-1.2
%%Title: kk.ps
%%Creator: gnuplot 3.7 patchlevel 0
%%CreationDate: Thu Mar 15 22:18:08 2001
%%For:alvalv alv
%%Pages: 1
%%DocumentFonts: Helvetica-Bold Helvetica
%%BoundingBox: 57 51 537 577
% inserted by ps2epsi -- start
save countdictstack mark newpath /showpage {} def /setpagedevice {pop} def
%%EndProlog
%%Page 1 1
% inserted by ps2epsi -- stop
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
currentdict /CharStrings known {
	CharStrings /Idieresis known {
		/Encoding ISOLatin1Encoding def } if
} if
currentdict end definefont
} def
/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/UL { gnulinewidth mul /userlinewidth exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/Helvetica reencodeISO def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
714 420 M
63 0 V
4025 0 R
-63 0 V
 stroke
630 420 M
[ [(Helvetica) 140.0 0.0 true true (-1.5)]
] -46.7 MRshow
714 876 M
63 0 V
4025 0 R
-63 0 V
 stroke
630 876 M
[ [(Helvetica) 140.0 0.0 true true (-1)]
] -46.7 MRshow
714 1332 M
63 0 V
4025 0 R
-63 0 V
 stroke
630 1332 M
[ [(Helvetica) 140.0 0.0 true true (-0.5)]
] -46.7 MRshow
714 1788 M
63 0 V
4025 0 R
-63 0 V
 stroke
630 1788 M
[ [(Helvetica) 140.0 0.0 true true (0)]
] -46.7 MRshow
714 2244 M
63 0 V
4025 0 R
-63 0 V
 stroke
630 2244 M
[ [(Helvetica) 140.0 0.0 true true (0.5)]
] -46.7 MRshow
714 2700 M
63 0 V
4025 0 R
-63 0 V
 stroke
630 2700 M
[ [(Helvetica) 140.0 0.0 true true (1)]
] -46.7 MRshow
714 3156 M
63 0 V
4025 0 R
-63 0 V
 stroke
630 3156 M
[ [(Helvetica) 140.0 0.0 true true (1.5)]
] -46.7 MRshow
714 3612 M
63 0 V
4025 0 R
-63 0 V
 stroke
630 3612 M
[ [(Helvetica) 140.0 0.0 true true (2)]
] -46.7 MRshow
714 4068 M
63 0 V
4025 0 R
-63 0 V
 stroke
630 4068 M
[ [(Helvetica) 140.0 0.0 true true (2.5)]
] -46.7 MRshow
714 4524 M
63 0 V
4025 0 R
-63 0 V
 stroke
630 4524 M
[ [(Helvetica) 140.0 0.0 true true (3)]
] -46.7 MRshow
714 4980 M
63 0 V
4025 0 R
-63 0 V
 stroke
630 4980 M
[ [(Helvetica) 140.0 0.0 true true (3.5)]
] -46.7 MRshow
929 420 M
0 63 V
0 4497 R
0 -63 V
 stroke
929 280 M
[ [(Helvetica) 140.0 0.0 true true (1)]
] -46.7 MCshow
1359 420 M
0 63 V
0 4497 R
0 -63 V
 stroke
1359 280 M
[ [(Helvetica) 140.0 0.0 true true (2)]
] -46.7 MCshow
1790 420 M
0 63 V
0 4497 R
0 -63 V
 stroke
1790 280 M
[ [(Helvetica) 140.0 0.0 true true (3)]
] -46.7 MCshow
2220 420 M
0 63 V
0 4497 R
0 -63 V
 stroke
2220 280 M
[ [(Helvetica) 140.0 0.0 true true (4)]
] -46.7 MCshow
2650 420 M
0 63 V
0 4497 R
0 -63 V
 stroke
2650 280 M
[ [(Helvetica) 140.0 0.0 true true (5)]
] -46.7 MCshow
3081 420 M
0 63 V
0 4497 R
0 -63 V
 stroke
3081 280 M
[ [(Helvetica) 140.0 0.0 true true (6)]
] -46.7 MCshow
3511 420 M
0 63 V
0 4497 R
0 -63 V
 stroke
3511 280 M
[ [(Helvetica) 140.0 0.0 true true (7)]
] -46.7 MCshow
3941 420 M
0 63 V
0 4497 R
0 -63 V
 stroke
3941 280 M
[ [(Helvetica) 140.0 0.0 true true (8)]
] -46.7 MCshow
4372 420 M
0 63 V
0 4497 R
0 -63 V
 stroke
4372 280 M
[ [(Helvetica) 140.0 0.0 true true (9)]
] -46.7 MCshow
4802 420 M
0 63 V
0 4497 R
0 -63 V
 stroke
4802 280 M
[ [(Helvetica) 140.0 0.0 true true (10)]
] -46.7 MCshow
1.000 UL
LTb
714 420 M
4088 0 V
0 4560 V
-4088 0 V
714 420 L
 stroke
140 2700 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ /bold reencodeISO def
[(bold) 140.0 0.0 true true (E/E)]
[(bold) 112.0 -42.0 true true (I)]
] -32.7 MCshow
grestore
2758 70 M
[ [(bold) 140.0 0.0 true true (Q)]
] -46.7 MCshow
2758 5190 M
[ [(bold) 140.0 0.0 true true (Niveles electr)]
[(bold) 140.0 0.0 true true (\363)]
[(bold) 140.0 0.0 true true (nicos de H)]
[(bold) 112.0 -42.0 true true (2)]
[(bold) 112.0 70.0 true true (+)]
] -46.7 MCshow
2.000 UL
LT0
4151 4847 M
[ [(Helvetica) 140.0 0.0 true true (E1\(x\))]
] -46.7 MRshow
4235 4847 M
399 0 V
714 2799 M
41 -555 V
42 -390 V
41 -286 V
41 -214 V
41 -164 V
42 -128 V
41 -100 V
41 -78 V
42 -62 V
41 -49 V
41 -39 V
42 -29 V
41 -23 V
41 -16 V
41 -12 V
42 -8 V
41 -5 V
41 -2 V
42 1 V
41 2 V
41 4 V
41 5 V
42 6 V
41 7 V
41 7 V
42 8 V
41 8 V
41 8 V
41 8 V
42 9 V
41 8 V
41 8 V
42 8 V
41 8 V
41 7 V
42 8 V
41 7 V
41 6 V
41 7 V
42 6 V
41 6 V
41 5 V
42 6 V
41 5 V
41 4 V
41 5 V
42 4 V
41 4 V
41 3 V
42 4 V
41 3 V
41 3 V
42 3 V
41 3 V
41 2 V
41 2 V
42 2 V
41 2 V
41 2 V
42 2 V
41 2 V
41 1 V
41 1 V
42 2 V
41 1 V
41 1 V
42 1 V
41 1 V
41 1 V
42 1 V
41 0 V
41 1 V
41 1 V
42 0 V
41 1 V
41 0 V
42 1 V
41 0 V
41 1 V
41 0 V
42 0 V
41 1 V
41 0 V
42 0 V
41 0 V
41 1 V
41 0 V
42 0 V
41 0 V
41 0 V
42 0 V
41 1 V
41 0 V
42 0 V
41 0 V
41 0 V
41 0 V
42 0 V
41 0 V
2.000 UL
LT1
4151 4707 M
[ [(Helvetica) 140.0 0.0 true true (E2\(x\))]
] -46.7 MRshow
4235 4707 M
399 0 V
714 4796 M
41 -639 V
42 -471 V
41 -365 V
41 -292 V
41 -239 V
42 -201 V
41 -171 V
41 -147 V
42 -129 V
41 -113 V
41 -100 V
42 -90 V
41 -80 V
41 -72 V
41 -65 V
42 -59 V
41 -54 V
41 -50 V
42 -44 V
41 -42 V
41 -37 V
41 -35 V
42 -32 V
41 -30 V
41 -27 V
42 -25 V
41 -23 V
41 -21 V
41 -20 V
42 -18 V
41 -17 V
41 -16 V
42 -15 V
41 -13 V
41 -13 V
42 -11 V
41 -11 V
41 -10 V
41 -9 V
42 -8 V
41 -8 V
41 -8 V
42 -6 V
41 -7 V
41 -6 V
41 -5 V
42 -5 V
41 -5 V
41 -4 V
42 -4 V
41 -3 V
41 -4 V
42 -3 V
41 -3 V
41 -3 V
41 -2 V
42 -2 V
41 -3 V
41 -2 V
42 -1 V
41 -2 V
41 -2 V
41 -1 V
42 -1 V
41 -2 V
41 -1 V
42 -1 V
41 -1 V
41 -1 V
42 0 V
41 -1 V
41 -1 V
41 -1 V
42 0 V
41 -1 V
41 0 V
42 -1 V
41 0 V
41 0 V
41 -1 V
42 0 V
41 -1 V
41 0 V
42 0 V
41 0 V
41 -1 V
41 0 V
42 0 V
41 0 V
41 0 V
42 0 V
41 -1 V
41 0 V
42 0 V
41 0 V
41 0 V
41 0 V
42 0 V
41 0 V
2.000 UL
LT2
4151 4567 M
[ [(Helvetica) 140.0 0.0 true true (EI)]
] -46.7 MRshow
4235 4567 M
399 0 V
714 876 M
41 0 V
42 0 V
41 0 V
41 0 V
41 0 V
42 0 V
41 0 V
41 0 V
42 0 V
41 0 V
41 0 V
42 0 V
41 0 V
41 0 V
41 0 V
42 0 V
41 0 V
41 0 V
42 0 V
41 0 V
41 0 V
41 0 V
42 0 V
41 0 V
41 0 V
42 0 V
41 0 V
41 0 V
41 0 V
42 0 V
41 0 V
41 0 V
42 0 V
41 0 V
41 0 V
42 0 V
41 0 V
41 0 V
41 0 V
42 0 V
41 0 V
41 0 V
42 0 V
41 0 V
41 0 V
41 0 V
42 0 V
41 0 V
41 0 V
42 0 V
41 0 V
41 0 V
42 0 V
41 0 V
41 0 V
41 0 V
42 0 V
41 0 V
41 0 V
42 0 V
41 0 V
41 0 V
41 0 V
42 0 V
41 0 V
41 0 V
42 0 V
41 0 V
41 0 V
42 0 V
41 0 V
41 0 V
41 0 V
42 0 V
41 0 V
41 0 V
42 0 V
41 0 V
41 0 V
41 0 V
42 0 V
41 0 V
41 0 V
42 0 V
41 0 V
41 0 V
41 0 V
42 0 V
41 0 V
41 0 V
42 0 V
41 0 V
41 0 V
42 0 V
41 0 V
41 0 V
41 0 V
42 0 V
41 0 V
stroke
grestore
end
showpage
                                   %%Trailer
% inserted by ps2epsi -- start
%%Trailer
cleartomark countdictstack exch sub { end } repeat restore
%%EOF
% inserted by ps2epsi -- stop
